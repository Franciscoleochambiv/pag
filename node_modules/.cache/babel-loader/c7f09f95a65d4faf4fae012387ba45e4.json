{"ast":null,"code":"import _defineProperty from \"/home/lolo/Descargas/paginaflolo (copia)/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/lolo/Descargas/paginaflolo (copia)/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lolo/Descargas/paginaflolo (copia)/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lolo/Descargas/paginaflolo (copia)/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lolo/Descargas/paginaflolo (copia)/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lolo/Descargas/paginaflolo (copia)/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/lolo/Descargas/paginaflolo (copia)/paginaf4/src/components/extra/ViewCateHooks.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentCategoria, deleteCurrentCategoria, updateCurrentCategoria } from \"../../actions/categoriaActions\";\nimport Spinner from \"../../components/common/Spinner.js\"; //import { Modal } from 'react-materialize';\n//\n//import { Modal } from 'react-materialize';\n\nimport ReactPaginate from 'react-paginate';\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from '../Modal/Modal.js'; //import Modal from '@material-ui/core/Modal';\n//import Example from \"../components/Modal/Example.js\";\n\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"../CustomButtons/Button.js\";\nimport Select from \"@material-ui/core/Input\";\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridItem from \"../Grid/GridItem.js\";\nimport GridContainer from \"../Grid/GridContainer.js\";\nimport Card from \"../Card/Card.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport Paper from '@material-ui/core/Paper';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; //import SimpleModal from \"./SimpleModal\"\n//import Table from \"@material-ui/core/Table\";\n\nimport '../data.css';\n\nvar ViewCate = /*#__PURE__*/function (_Component) {\n  _inherits(ViewCate, _Component);\n\n  var _super = _createSuper(ViewCate);\n\n  function ViewCate() {\n    var _this;\n\n    _classCallCheck(this, ViewCate);\n\n    _this = _super.call(this);\n\n    _this.toggleModal = function (id, cod, des) {\n      _this.setState({\n        isOpen: !_this.state.isOpen,\n        id_: id,\n        codigo: cod,\n        descripcion: des\n      });\n    };\n\n    _this.toggleModalfin = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    _this.handlePageClicked = function (data) {\n      var selected = data.selected;\n\n      _this.setState({\n        selectedPage: selected,\n        currentPage: Number(selected + 1)\n      });\n    };\n\n    _this.state = {\n      tipoData: [],\n      id: \"\",\n      name: \"\",\n      category: \"\",\n      price: \"\",\n      description: \"\",\n      popular: \"\",\n      imageUrls: \"\",\n      id_: \"\",\n      search: '',\n      currentPage: 1,\n      todosPerPage: 5,\n      selectedPage: 1,\n      isOpen: false\n    };\n    _this.searchHandler = _this.searchHandler.bind(_assertThisInitialized(_this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.seleccion = _this.seleccion.bind(_assertThisInitialized(_this));\n    _this.ordenac = _this.ordenac.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ViewCate, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var tipoData = {\n        descripcion: this.state.descripcion,\n        codigo: this.state.codigo\n      };\n      this.props.updateCurrentCategoria(this.state.id_, tipoData);\n      this.toggleModalfin();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      console.log(e.target.value);\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n  }, {\n    key: \"seleccion\",\n    value: function seleccion(event) {\n      event.preventDefault();\n      var op = event.target.value;\n      this.setState({\n        todosPerPage: op\n      });\n    }\n  }, {\n    key: \"ordenac\",\n    value: function ordenac(columna) {\n      var oc = columna;\n      alert(oc);\n    }\n  }, {\n    key: \"searchHandler\",\n    value: function searchHandler(event) {\n      var lolo = event.target.value.toUpperCase();\n      this.setState({\n        search: lolo\n      });\n      this.setState({\n        selectedPage: 1,\n        currentPage: Number(1)\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"onDeleteClick\",\n    value: function onDeleteClick(id) {\n      this.props.deleteCurrentCategoria(id);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentCategoria();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var styles = {\n        cardCategoryWhite: {\n          \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n          },\n          \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n          }\n        },\n        cardTitleWhite: {\n          color: \"#FFFFFF\",\n          marginTop: \"0px\",\n          minHeight: \"auto\",\n          fontWeight: \"300\",\n          fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n          marginBottom: \"3px\",\n          textDecoration: \"none\",\n          \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n          }\n        }\n      };\n      var useStyles = makeStyles(styles);\n      var classes = useStyles;\n      var _this$props$categoria = this.props.categoriafile,\n          categoriafiles = _this$props$categoria.categoriafiles,\n          loading = _this$props$categoria.loading;\n      var _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage;\n      var indexOfLastTodo = currentPage * todosPerPage;\n      var indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(categoriafiles.length / todosPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var filteredContacts = categoriafiles.filter(function (task) {\n        var poetName = task.codigo + task.descripcion.toUpperCase();\n        var separador = \" \";\n        var i;\n\n        var poetName1 = _this2.state.search.split(separador);\n\n        var tpalabras = poetName1.length;\n        var datopa;\n\n        if (tpalabras > 3) {\n          return poetName.indexOf(_this2.state.search) !== -1;\n        } else {\n          for (i = 0; i < tpalabras; i++) {\n            datopa = poetName1[i];\n            return poetName.indexOf(datopa) !== -1;\n          }\n\n          return poetName;\n        }\n      } //FIN EDL FUNCION MAP              \n      );\n      var Pagination = /*#__PURE__*/React.createElement(ReactPaginate, {\n        previousLabel: '<',\n        nextLabel: '>',\n        breakLabel: '...',\n        breakClassName: 'break-me',\n        pageCount: Math.ceil(filteredContacts.length / todosPerPage),\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 2,\n        onPageChange: this.handlePageClicked,\n        containerClassName: 'react-paginate ul',\n        subContainerClassName: 'react-paginate li',\n        activeClassName: 'active',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }\n      });\n      var currentTodos = filteredContacts.slice(indexOfFirstTodo, indexOfLastTodo);\n      var dashboardContent;\n      var edicion;\n\n      if (filteredContacts === null || loading) {\n        dashboardContent = /*#__PURE__*/React.createElement(TableRow, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 23\n          }\n        })));\n      } else {\n        if (this.state.isOpen) {\n          edicion = /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 20\n            }\n          }, /*#__PURE__*/React.createElement(Modal, {\n            isOpen: this.state.isOpen,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 22\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 22\n            }\n          }, /*#__PURE__*/React.createElement(CardHeader, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(\"h4\", {\n            className: classes.cardTitleWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 27\n            }\n          }, \"Edicion Categorias\"), /*#__PURE__*/React.createElement(\"form\", {\n            onSubmit: this.onSubmit,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(CardBody, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-col-12 p-lg-12\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-grid\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(GridContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 5,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            \"for\": \"codigo\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 44\n            }\n          }, \"Codigo\"), /*#__PURE__*/React.createElement(\"input\", {\n            className: \"p-inputtext p-component\",\n            placeholder: \"id \",\n            value: this.state.codigo,\n            name: \"codigo\",\n            onChange: this.onChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 47\n            }\n          }))), /*#__PURE__*/React.createElement(GridContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 5,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            \"for\": \"descripcion\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 45\n            }\n          }, \"Descripcion\"), /*#__PURE__*/React.createElement(\"input\", {\n            className: \"p-inputtext p-component\",\n            name: \"descripcion\",\n            placeholder: \"name\",\n            value: this.state.descripcion,\n            onChange: this.onChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 48\n            }\n          }))))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-col-12 p-nogutter\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-grid\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-col-12 p-lg-12\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 39\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-grid\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 42\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-col-12 p-md-6\",\n            style: {\n              textAlign: 'center'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 46\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"white\",\n            type: \"submit\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 50\n            }\n          }, \"Editar\"), /*#__PURE__*/React.createElement(Button, {\n            color: \"white\",\n            type: \"button\",\n            onClick: function onClick() {\n              return _this2.setState({\n                isOpen: false\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 50\n            }\n          }, \"Cancelar\"))))))))))));\n        }\n\n        if (Object.keys(this.props.categoriafile).length > 0) {\n          dashboardContent = currentTodos.map(function (l1) {\n            return /*#__PURE__*/React.createElement(TableRow, {\n              key: l1.id,\n              className: classes.tableBodyRow,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(TableCell, {\n              className: classes.tableCell,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 24\n              }\n            }, l1.codigo), /*#__PURE__*/React.createElement(TableCell, {\n              className: classes.tableCell,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 24\n              }\n            }, l1.descripcion), /*#__PURE__*/React.createElement(TableCell, {\n              className: classes.tableCell,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 24\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              type: \"button\",\n              onClick: _this2.toggleModal.bind(_this2, l1.id, l1.codigo, l1.descripcion),\n              className: \"btn btn-primary  01579b light-blue darken-2\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 29\n              }\n            }, \"Editar\")), /*#__PURE__*/React.createElement(TableCell, {\n              className: classes.tableCell,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 24\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger   01579b red darken-2\",\n              onClick: _this2.onDeleteClick.bind(_this2, l1.codigo),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 29\n              }\n            }, \"Borrar\")));\n          });\n        } else {\n          dashboardContent = /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"lead text-muted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 27\n            }\n          }, \"Bienvenido \"), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 27\n            }\n          }, \"A\\xFAn no ha configurado un perfil, por favor agregue alguna informaci\\xF3n.\"));\n        }\n      } //FIN DEL RENDER\n\n\n      return /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control\",\n        style: {\n          \"colo\": \"red\"\n        },\n        value: this.todosPerPage,\n        onChange: this.seleccion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 16\n        }\n      }eact.createElement(\"option\", {\n        style: {\n          \"colo\": \"red\"\n        },\n        value: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 1236\n        }\n      }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 39\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"25\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 39\n        }\n      }, \"25\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 39\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 39\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: filteredContacts.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 39\n        }\n      }, \"Todos\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"buscar\",\n        className: \"form-control\",\n        placeholder: \"Ingrese cadena A Buscar\",\n        onChange: this.searchHandler,\n        value: this.state.search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: _defineProperty({\n          overflow: \"scroll\"\n        }, \"overflow\", \"auto\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }\n      }, edicion, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        className: classes.tableHeadRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableHeadCell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 37\n        }\n      }, \"Codigo\"), /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableHeadCell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 37\n        }\n      }, \"Descripcion\"), /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableHeadCell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 37\n        }\n      }, \"Modificaiones\"), /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableHeadCell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 37\n        }\n      }, \"Eliminaciones\"))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 30\n        }\n      }, dashboardContent)), /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 17\n        }\n      }, Pagination)))), /*#__PURE__*/React.createElement(CardHeader, {\n        color: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.cardCategoryWhite,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }\n      }, \"Numero de Coincidencias encontradas \", filteredContacts.length)))));\n    }\n  }]);\n\n  return ViewCate;\n}(Component);\n\nViewCate.propTypes = {\n  getCurrentCategoriasql: PropTypes.func.isRequired,\n  deleteCurrentCategoriasql: PropTypes.func.isRequired,\n  updateCurrentCategoriasql: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categoriafile: state.categoriafile,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentCategoria: getCurrentCategoria,\n  deleteCurrentCategoria: deleteCurrentCategoria,\n  updateCurrentCategoria: updateCurrentCategoria\n})(ViewCate);","map":{"version":3,"sources":["/home/lolo/Descargas/paginaflolo (copia)/paginaf4/src/components/extra/ViewCateHooks.js"],"names":["React","Component","PropTypes","connect","getCurrentCategoria","deleteCurrentCategoria","updateCurrentCategoria","Spinner","ReactPaginate","Modal","ModalHeader","ModalBody","ModalFooter","Input","Button","Select","styles","makeStyles","GridItem","GridContainer","Card","CardHeader","CardBody","TableContainer","Table","Paper","EditIcon","DeleteForeverIcon","SaveIcon","CancelIcon","TableHead","TableRow","TableBody","TableCell","ViewCate","toggleModal","id","cod","des","setState","isOpen","state","id_","codigo","descripcion","toggleModalfin","handlePageClicked","data","selected","selectedPage","currentPage","Number","tipoData","name","category","price","description","popular","imageUrls","search","todosPerPage","searchHandler","bind","handleClick","onChange","onSubmit","seleccion","ordenac","e","preventDefault","props","console","log","target","value","event","op","columna","oc","alert","lolo","toUpperCase","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","useStyles","classes","categoriafile","categoriafiles","loading","indexOfLastTodo","indexOfFirstTodo","pageNumbers","i","Math","ceil","length","push","filteredContacts","filter","task","poetName","separador","poetName1","split","tpalabras","datopa","indexOf","Pagination","currentTodos","slice","dashboardContent","edicion","textAlign","Object","keys","map","l1","tableBodyRow","tableCell","onDeleteClick","overflow","tableHeadRow","tableHeadCell","propTypes","getCurrentCategoriasql","func","isRequired","deleteCurrentCategoriasql","updateCurrentCategoriasql","mapStateToProps","errors"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getCurrentCategoria,deleteCurrentCategoria,updateCurrentCategoria  \n} from \"../../actions/categoriaActions\";\nimport Spinner from \"../../components/common/Spinner.js\";\n//import { Modal } from 'react-materialize';\n//\n//import { Modal } from 'react-materialize';\nimport ReactPaginate from 'react-paginate';\n\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from '../Modal/Modal.js';\n\n\n//import Modal from '@material-ui/core/Modal';\n//import Example from \"../components/Modal/Example.js\";\n\nimport Input from \"@material-ui/core/Input\";\nimport Button from \"../CustomButtons/Button.js\";\nimport Select from \"@material-ui/core/Input\";\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"../Grid/GridItem.js\";\nimport GridContainer from \"../Grid/GridContainer.js\";\n\nimport Card from \"../Card/Card.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport CardBody from \"../Card/CardBody.js\";\n\n\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport Paper from '@material-ui/core/Paper';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\n//import SimpleModal from \"./SimpleModal\"\n//import Table from \"@material-ui/core/Table\";\n\n\n\n\nimport '../data.css';\n\nclass ViewCate extends Component {\n  constructor(){\n    super();\n    this.state={\n      tipoData:[],\n      id:\"\",\n      name:\"\",\n      category:\"\",\n      price:\"\",\n      description:\"\",\n      popular:\"\",\n      imageUrls:\"\",\n      id_:\"\",      \n      search:'',\n      currentPage: 1,\n      todosPerPage:5,\n      selectedPage: 1,    \n      isOpen: false   \n     \n    };\n    this.searchHandler=this.searchHandler.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleModal= this.toggleModal.bind(this);   \n    this.onChange = this.onChange.bind(this);    \n    this.onSubmit = this.onSubmit.bind(this);\n    this.seleccion = this.seleccion.bind(this);\n    this.ordenac = this.ordenac.bind(this);\n  }\n  \n\n  toggleModal = (id,cod,des) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      id_:id,\n      codigo:cod,\n      descripcion:des      \n    }); \n   }   \n \n   toggleModalfin = () => {\n     this.setState({\n       isOpen: !this.state.isOpen      \n     });\n   }\n\n   onSubmit(e) {\n    e.preventDefault();\n    const tipoData = {\n      descripcion: this.state.descripcion,\n      codigo: this.state.codigo,\n    \n    };\n    this.props.updateCurrentCategoria(this.state.id_,tipoData);\n    this.toggleModalfin();\n\n   }\n\n\n  onChange(e) {\n    console.log(e.target.value)\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  }\n\n\n  handlePageClicked = data => {\n    let selected = data.selected;\n    this.setState({\n      selectedPage: selected,\n      currentPage: Number(selected+1)\n    })\n  };\n\n  \n  seleccion(event) {\n    event.preventDefault();\n    let op =event.target.value;\n    this.setState({todosPerPage: op});\n  };\n\n\n  ordenac(columna) {\n    let oc =columna;\n    alert(oc);\n  \n  }; \n\n\n  searchHandler(event){\n    const lolo = event.target.value.toUpperCase();\n    this.setState({search: lolo});\n    this.setState({\n      selectedPage: 1,\n     currentPage: Number(1)\n    })\n   }\n  \n   handleChange(e){\n     const {name,value}= e.target;\n     this.setState({\n       [name]:value\n     })\n   }\n\n  onDeleteClick(id) {\n    this.props.deleteCurrentCategoria(id);\n    }\n\n \n\n  componentDidMount() {\n     this.props.getCurrentCategoria();\n    }\n\n\n  render() {\n\n    const styles = {\n      cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n          color: \"rgba(255,255,255,.62)\",\n          margin: \"0\",\n          fontSize: \"14px\",\n          marginTop: \"0\",\n          marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n          color: \"#FFFFFF\"\n        }\n      },\n      cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n          color: \"#777\",\n          fontSize: \"65%\",\n          fontWeight: \"400\",\n          lineHeight: \"1\"\n        }\n      }\n    };\n    \n    \n    const useStyles = makeStyles(styles);\n    \n    const classes = useStyles;\n                         \n            const { categoriafiles, loading } = this.props.categoriafile;\n            const { currentPage, todosPerPage } = this.state;\n            const indexOfLastTodo = currentPage * todosPerPage;\n            const indexOfFirstTodo = indexOfLastTodo - todosPerPage;            \n            const pageNumbers = [];\n            for (let i = 1; i <= Math.ceil(categoriafiles.length / todosPerPage); i++) {\n              pageNumbers.push(i);\n            }\n            let filteredContacts = categoriafiles.filter(\n              (task) =>{\n                  let poetName = task.codigo+task.descripcion.toUpperCase();\n                  let separador=\" \"; \n                  let i;\n                  let poetName1=this.state.search.split(separador);\n                  let tpalabras=poetName1.length;    \n                  let datopa;  \n                  if (tpalabras>3){\n                      return  poetName.indexOf(this.state.search) !== -1;    \n\n                    }\n                  else{\n                        for (i=0;i<tpalabras;i++) {\n                          datopa=poetName1[i];             \n                          return poetName.indexOf(datopa) !== -1 ;             \n                              }\n                        return poetName;\n                      }\n                  } //FIN EDL FUNCION MAP              \n              );\n          \n            const Pagination = (\n              <ReactPaginate \n                previousLabel={'<'}\n                nextLabel={'>'}\n                breakLabel={'...'}\n                breakClassName={'break-me'}\n                pageCount={Math.ceil(filteredContacts.length / todosPerPage)}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={2}\n                onPageChange={this.handlePageClicked}\n                containerClassName={'react-paginate ul'}\n                subContainerClassName={'react-paginate li'}\n                activeClassName={'active'}\n        \n\n                \n                />      \n               )\n\n            const currentTodos = filteredContacts.slice(indexOfFirstTodo, indexOfLastTodo);\n            let dashboardContent;\n            let edicion;          \n            if (filteredContacts === null || loading) {\n              dashboardContent = (\n                  <TableRow >                       \n                  <TableCell >\n                      <Spinner/>\n                  </TableCell>  \n                </TableRow >\n              );\n                            \n            } else {              \n               if (this.state.isOpen){\n                  edicion =(\n                   <div >   \n                     \n                     <Modal  isOpen={this.state.isOpen}> \n\n                      \n                     <Card>                   \n                       <CardHeader >\n                          \n                          <h4 className={classes.cardTitleWhite}>Edicion Categorias</h4>\n                          \n\n                        <form  onSubmit={this.onSubmit}>  \n                        <CardBody>\n                            \n                              <div className=\"p-col-12 p-lg-12\">                \n                                    <div className=\"p-grid\">\n                                      \n                                        <GridContainer>\n                                          <GridItem xs={12} sm={12} md={5}>    \n                                           <label for=\"codigo\">Codigo</label>\n                                              <input className=\"p-inputtext p-component\"\n                                               placeholder=\"id \"\n                                               value={this.state.codigo}\n                                               name=\"codigo\"\n                                               onChange={this.onChange}                                  \n                                            />                                \n                                            </GridItem>  \n                                        </GridContainer>\n                                   \n\n                                        <GridContainer>\n                                          <GridItem xs={12} sm={12} md={5}>   \n                                       \n                                            <label for=\"descripcion\">Descripcion</label>\n                                               <input className=\"p-inputtext p-component\"\n                                                name=\"descripcion\"\n                                                placeholder=\"name\"\n                                                value={this.state.descripcion}\n                                                onChange={this.onChange} \n                                               />\n                                          </GridItem>  \n                                        </GridContainer>                                                                                                               \n                                                                  \n                                    </div>  \n                                           \n                              </div> \n                              <div className=\"p-col-12 p-nogutter\">\n                                  <div className=\"p-grid\">                       \n                                      <div className=\"p-col-12 p-lg-12\">                                              \n                                         <div className=\"p-grid\">\n                                             <div className=\"p-col-12 p-md-6\" style={{textAlign:'center'}}>\n                                             \n                                           \n                                           \n                                                 <Button color=\"white\" type=\"submit\" >Editar</Button>\n                                                 <Button color=\"white\" type=\"button\" onClick={() => this.setState({isOpen:false})} >Cancelar</Button>\n                                                 \n                                              </div>                                                                                                                \n                                         </div>     \n                                      </div>                                                 \n                                  </div>  \n                              </div> \n                        </CardBody>      \n                        </form>  \n                        </CardHeader>                          \t\t\t\t\t\t\t\t\t\t \n                      </Card> \n                      \n                   </Modal>\n                 \n                 </div>\n                         );\n                }                \n            if (Object.keys(this.props.categoriafile).length > 0) {\n              dashboardContent = (          \n              currentTodos.map(l1 => (\n\n                \n                    <TableRow key={l1.id} className={classes.tableBodyRow}>\n                       \n                       <TableCell className={classes.tableCell}>{l1.codigo}</TableCell>        \n                       <TableCell className={classes.tableCell}>{l1.descripcion}</TableCell>        \n                       <TableCell className={classes.tableCell}>\n                            <button type=\"button\"  onClick={this.toggleModal.bind(this,l1.id,l1.codigo,l1.descripcion)} className=\"btn btn-primary  01579b light-blue darken-2\"  >Editar</button>                                         \n                       </TableCell>\n                       <TableCell className={classes.tableCell}>\n                            <button type=\"button\" className=\"btn btn-danger   01579b red darken-2\" onClick={this.onDeleteClick.bind(this,l1.codigo)} >Borrar</button>                          \n                       </TableCell>\n                       \n                       \n                     </TableRow>    \n                      \n\n\n\n                                  ))     \n                                  );        \n                }\n              else{\n                dashboardContent = (          \n                        <div>\n                          <p className=\"lead text-muted\">Bienvenido </p>\n                          <p>Aún no ha configurado un perfil, por favor agregue alguna información.</p>                  \n                        </div>\n                  );         \n                }      \n       } //FIN DEL RENDER\n    return (\n\n      <GridItem xs={12} sm={12} md={12}>\n        \n               <select  className=\"form-control\" style={{\"colo\":\"red\"}}  value={this.todosPerPage} onChange={this.seleccion}option  style={{\"colo\":\"red\"}}value=\"5\">\n                                        5\n                                      </option>\n                                      <option value=\"10\">\n                                        10\n                                      </option>\n                                      <option value=\"25\">\n                                        25\n                                      </option>\n                                      <option value=\"50\">\n                                        50\n                                      </option>\n                                      <option value=\"100\">\n                                        100\n                                      </option>\n                                      <option value={filteredContacts.length }>\n                                        Todos\n                                     </option>\n               </select>        \n                <Input type =\"text\"  name=\"buscar\" className=\"form-control\" placeholder=\"Ingrese cadena A Buscar\" onChange={this.searchHandler} value={this.state.search}  /> \n  \n      <GridContainer>\n           \n      <GridItem xs={12} sm={12} md={12}>\n     \n\n      <Card style={{overflow: \"scroll\",overflow: \"auto\"}}>\n          \n          <CardBody>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={5}>             \n                    {edicion}\n                            <TableHead >\n                                <TableRow className={classes.tableHeadRow}>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell}>Codigo</TableCell>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell}>Descripcion</TableCell>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell}>Modificaiones</TableCell>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell}>Eliminaciones</TableCell>\n                               </TableRow>                   \n                             </TableHead>\n                            \n                             <TableBody>\n                                     {dashboardContent}\n                             </TableBody>                        \n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}> \n                  {Pagination} \n                </GridItem>\n\n            </GridContainer> \n        </CardBody>  \n    </Card> \n\n        <CardHeader color=\"info\">            \n            <p className={classes.cardCategoryWhite}>           \n            Numero de Coincidencias encontradas {filteredContacts.length}\n            </p>\n        </CardHeader> \n\n\n     </GridItem>   \n    </GridContainer>  \n    </GridItem> \n \n   \n    );\n  }\n}\n\n\nViewCate.propTypes = {\n  getCurrentCategoriasql : PropTypes.func.isRequired,\n  deleteCurrentCategoriasql: PropTypes.func.isRequired,\n  updateCurrentCategoriasql: PropTypes.func.isRequired,\n  \n};\n\nconst mapStateToProps = state => ({\n  categoriafile: state.categoriafile,  \n  errors: state.errors\n}\n);\n\nexport default connect(mapStateToProps, { getCurrentCategoria ,deleteCurrentCategoria,updateCurrentCategoria })(\n  ViewCate\n);\n\n\n"]},"metadata":{},"sourceType":"module"}