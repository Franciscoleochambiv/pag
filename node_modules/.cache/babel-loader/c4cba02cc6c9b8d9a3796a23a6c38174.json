{"ast":null,"code":"import _objectSpread from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/lolo/Descargas/paginaflolo/paginaf4/src/views/ProductList/ProductListv.js\";\nimport React, { Component } from \"react\";\nimport Item from \"../Item/Item\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport queryString from \"query-string\";\nimport Api from \"../../Api\";\nimport Paging from \"../Paging/Paging\";\nimport ProductsHeader from \"../ProductsHeader/ProductsHeader\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport Paper from '@material-ui/core/Paper';\nimport { connect } from \"react-redux\";\nimport { addItemInCart } from \"../../actions/ventasActions\";\nimport { withRouter } from \"react-router-dom\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\"; // This component is responsible for fetching products. It determines from query string which products to fetch.\n// The URL is checked on initial mount and when URL changes.\n\nvar ProductList = /*#__PURE__*/function (_Component) {\n  _inherits(ProductList, _Component);\n\n  var _super = _createSuper(ProductList);\n\n  function ProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ProductList);\n\n    _this = _super.call(this, props);\n\n    _this.toggleModal = function (id) {\n      //alert(\"escojioo \"+id)\n      _this.props.history.push(\"/details/\" + id);\n    };\n\n    _this.toggleModal1 = function (id, codigo, precio, descripcion) {\n      //alert(\"escojioo \"+id)\n\n      /*\n      onClick={e => {\n                                        e.stopPropagation();\n                                        this.props.dispatch(\n                                          addItemInCart({ ...this.props.item, quantity: 1 })\n                                        );\n                                      }}\n                                    \n        */\n      _this.props.history.push(\"/details/\" + id);\n    };\n\n    _this.state = {\n      loading: false,\n      totalItemsCount: null,\n      items: []\n    };\n    _this.updateQueryString = _this.updateQueryString.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProductList, [{\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var qsAsObject, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                }); // Parse the query string\n\n                qsAsObject = queryString.parse(this.props.location.search); //console.log(\"este es el resultado de la barra\")\n                //console.log(qsAsObject)\n\n                console.log(\"estes es el dato a bausdca\");\n                console.log(qsAsObject);\n                _context.next = 6;\n                return Api.searchItems(qsAsObject);\n\n              case 6:\n                results = _context.sent;\n                this.setState({\n                  items: results.data,\n                  loading: false,\n                  totalItemsCount: results.totalLength\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"updateQueryString\",\n    value: function updateQueryString(newValues) {\n      var currentQS = queryString.parse(this.props.location.search);\n\n      var newQS = _objectSpread(_objectSpread({}, currentQS), newValues);\n\n      this.props.history.push(\"/prod/?\" + queryString.stringify(newQS));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var currentQS = queryString.parse(this.props.location.search);\n      var oldQS = queryString.parse(prevProps.location.search);\n\n      var areSameObjects = function areSameObjects(a, b) {\n        if (Object.keys(a).length !== Object.keys(b).length) return false;\n\n        for (var key in a) {\n          if (a[key] !== b[key]) return false;\n        }\n\n        return true;\n      }; // We will refetch products only when query string changes.\n\n\n      if (!areSameObjects(currentQS, oldQS)) {\n        this.fetchData();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var parsedQS = queryString.parse(this.props.location.search); //console.log(this.props);\n\n      if (this.state.loading) {\n        return /*#__PURE__*/React.createElement(CircularProgress, {\n          className: \"circular\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var useStyles = makeStyles({\n        table: {\n          minWidth: 250\n        },\n        tableCell: {\n          backgroundColor: \"#00acc1\"\n        },\n        root: {\n          '& .MuiTextField-root': {\n            width: '25ch'\n          }\n        }\n      });\n      var classes = useStyles;\n      var dash = \"\";\n\n      if (this.state.items.length > 0) {\n        dash = this.state.items.map(function (l1) {\n          return /*#__PURE__*/React.createElement(TableRow, {\n            key: l1.codigo,\n            className: classes.tableBodyRow,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(TableCell, {\n            className: classes.tableCell,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 31\n            }\n          }, l1.codigo), /*#__PURE__*/React.createElement(TableCell, {\n            className: classes.tableCell,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 31\n            }\n          }, l1.descripcion), /*#__PURE__*/React.createElement(TableCell, {\n            className: classes.tableCell,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 31\n            }\n          }, l1.precio), /*#__PURE__*/React.createElement(TableCell, {\n            className: classes.tableCell,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            onClick: _this2.toggleModal.bind(_this2, l1.id),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(EditIcon, {\n            color: \"primary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 104\n            }\n          }))));\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(GridContainer, {\n        style: {\n          marginTop: \"7px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ProductsHeader, {\n        parsedQS: parsedQS,\n        updateQueryString: this.updateQueryString,\n        totalItemsCount: this.state.totalItemsCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, this.state.items.map(function (item) {\n        return /*#__PURE__*/React.createElement(Item, {\n          key: item.id,\n          item: item,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 32\n          }\n        });\n      })), /*#__PURE__*/React.createElement(Paging, {\n        parsedQS: parsedQS,\n        updateQueryString: this.updateQueryString,\n        totalItemsCount: this.state.totalItemsCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return ProductList;\n}(Component); //export default ProductList;\n\n\nexport default withRouter(connect()(ProductList));\n/*\n\n,overflowX:\"auto\",overflowY:\"auto\"\n\n                                           <TableCell style={{color:\"white\"}}>Escojer</TableCell>                                                                      \n\n<TableCell className={classes.tableCell}>\n                                  <button type=\"button\"  \n                                     onClick={this.toggleModal1.bind(this,l1.id,l1.codigo,l1.precio,l1.descripcion)}                                                                                                         \n                                    ><EditIcon  color=\"secondary\" /></button>                                         \n                              </TableCell>\n*/","map":{"version":3,"sources":["/home/lolo/Descargas/paginaflolo/paginaf4/src/views/ProductList/ProductListv.js"],"names":["React","Component","Item","CircularProgress","queryString","Api","Paging","ProductsHeader","GridItem","GridContainer","makeStyles","EditIcon","TableHead","TableRow","TableBody","TableCell","TableContainer","Table","Paper","connect","addItemInCart","withRouter","Card","CardHeader","ProductList","props","toggleModal","id","history","push","toggleModal1","codigo","precio","descripcion","state","loading","totalItemsCount","items","updateQueryString","bind","setState","qsAsObject","parse","location","search","console","log","searchItems","results","data","totalLength","fetchData","newValues","currentQS","newQS","stringify","prevProps","prevState","snapshot","oldQS","areSameObjects","a","b","Object","keys","length","key","parsedQS","useStyles","table","minWidth","tableCell","backgroundColor","root","width","classes","dash","map","l1","tableBodyRow","marginTop","height","display","flexDirection","flex","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Item from \"../Item/Item\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport queryString from \"query-string\";\nimport Api from \"../../Api\";\nimport Paging from \"../Paging/Paging\";\nimport ProductsHeader from \"../ProductsHeader/ProductsHeader\"\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\n\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from '@material-ui/icons/Edit';\n\n\n\n\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport Paper from '@material-ui/core/Paper';\n\n\nimport { connect } from \"react-redux\";\n\nimport { addItemInCart } from \"../../actions/ventasActions\";\n\n\nimport { withRouter } from \"react-router-dom\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\n\n\n\n\n\n\n\n\n\n\n\n// This component is responsible for fetching products. It determines from query string which products to fetch.\n// The URL is checked on initial mount and when URL changes.\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      totalItemsCount: null,\n      items: []\n    };\n    this.updateQueryString = this.updateQueryString.bind(this);\n\n  }\n\n\n\n  toggleModal = (id) => {\n\n      //alert(\"escojioo \"+id)\n      this.props.history.push(\"/details/\" + id);\n   \n   }   \n\n   toggleModal1 = (id,codigo,precio,descripcion) => {\n\n    //alert(\"escojioo \"+id)\n\n\n    /*\nonClick={e => {\n                                      e.stopPropagation();\n                                      this.props.dispatch(\n                                        addItemInCart({ ...this.props.item, quantity: 1 })\n                                      );\n                                    }}\n                                  \n\n\n    */\n    this.props.history.push(\"/details/\" + id);\n \n }   \n\n\n\n  async fetchData() {\n\n    this.setState({ loading: true });\n\n    // Parse the query string\n    let qsAsObject = queryString.parse(this.props.location.search);\n    //console.log(\"este es el resultado de la barra\")\n\n    //console.log(qsAsObject)\n    \n    console.log(\"estes es el dato a bausdca\")\n    console.log(qsAsObject)\n\n\n\n    let results = await Api.searchItems(qsAsObject);\n\n    this.setState({\n      items: results.data,\n      loading: false,\n      totalItemsCount: results.totalLength\n    });\n  }\n  \n\n  \n  componentDidMount() {\n    this.fetchData();\n  }\n\n  updateQueryString(newValues) {\n    let currentQS = queryString.parse(this.props.location.search);\n    let newQS = { ...currentQS, ...newValues };\n    this.props.history.push(\"/prod/?\" + queryString.stringify(newQS));\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    let currentQS = queryString.parse(this.props.location.search);\n    let oldQS = queryString.parse(prevProps.location.search);\n    \n    let areSameObjects = (a, b) => {\n      if (Object.keys(a).length !== Object.keys(b).length) return false;\n      for (let key in a) {\n              if (a[key] !== b[key]) return false;\n      }\n      return true;\n    }\n\n\n    // We will refetch products only when query string changes.\n    if (!areSameObjects(currentQS,oldQS )) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    \n    let parsedQS = queryString.parse(this.props.location.search);\n\n    //console.log(this.props);\n\n    if (this.state.loading) {\n      return (\n        <CircularProgress className=\"circular\" />\n      );\n    }\n\n\n    const useStyles = makeStyles({\n      table: {\n        minWidth: 250,\n                \n      \n      },\n\n      tableCell:{\n          backgroundColor:\"#00acc1\",  \n\n      },\n      root: {\n        '& .MuiTextField-root': {\n          \n          width: '25ch',\n        },\n      },  \n    });    \n    const classes = useStyles;\n\n    let dash=\"\";\n\n    if (this.state.items.length>0){\n           dash=(             \n               this.state.items.map(l1 => (                                 \n                  <TableRow key={l1.codigo} className={classes.tableBodyRow}>\n                              <TableCell className={classes.tableCell}>{l1.codigo}</TableCell>        \n                              <TableCell className={classes.tableCell}>{l1.descripcion}</TableCell>                         \n                              <TableCell className={classes.tableCell}>{l1.precio}</TableCell>                                                            \n                              <TableCell className={classes.tableCell}>\n                                  <button type=\"button\"  onClick={this.toggleModal.bind(this,l1.id)}  ><EditIcon  color=\"primary\" /></button>                                         \n                              </TableCell>\n                              \n                  \n                  </TableRow>    \n                \n              \n               )\n           )\n           )\n    }\n\n\n\n    return (\n    <GridContainer style={{marginTop:\"7px\"}}>\n\n          \n                  <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n                    <ProductsHeader\n                      parsedQS={parsedQS}\n                      updateQueryString={this.updateQueryString}\n                      totalItemsCount={this.state.totalItemsCount} />\n\n                    <div style={{ flex: 1 }}>\n                      {this.state.items.map(item => {\n                        return <Item key={item.id} item={item} />;\n                      })}\n                    </div>\n\n                    <Paging\n                      parsedQS={parsedQS}\n                      updateQueryString={this.updateQueryString}\n                      totalItemsCount={this.state.totalItemsCount}\n                    />\n                  </div >\n\n    \n             </GridContainer>     \n       \n\n\n\n     \n    );\n  }\n}\n\n//export default ProductList;\nexport default withRouter(connect()(ProductList));\n\n\n/*\n\n,overflowX:\"auto\",overflowY:\"auto\"\n\n                                           <TableCell style={{color:\"white\"}}>Escojer</TableCell>                                                                      \n\n<TableCell className={classes.tableCell}>\n                                  <button type=\"button\"  \n                                     onClick={this.toggleModal1.bind(this,l1.id,l1.codigo,l1.precio,l1.descripcion)}                                                                                                         \n                                    ><EditIcon  color=\"secondary\" /></button>                                         \n                              </TableCell>\n*/"]},"metadata":{},"sourceType":"module"}