{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, GET_POST, GET_POSTS, GET_ERRORS, CLEAR_ERRORS, DELETE_COMMENT, POST_LOADING, DELETE_POST } from './types'; //let unidad=\"https://localhost\";\n//let unidad=\"https://adryan2.sytes.net:5000\";\n//let unidad=\"https://apisfsystem.herokuapp.com\"\n\nimport { unidad } from \"../variables\"; // Add Post\n\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(unidad + '/api/posts', postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Comment\n\nexport var addComment = function addComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(unidad + \"/api/posts/comment/\".concat(postId), commentData).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get Post\n\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(unidad + '/api/posts').then(function (res) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n}; // Get Post\n\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(unidad + \"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_POST,\n        payload: null\n      });\n    });\n  };\n}; // Delete Post\n\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\n      axios[\"delete\"](unidad + \"/api/posts/\".concat(id)).then(function (res) {\n        return dispatch({\n          type: DELETE_POST,\n          payload: id\n        });\n      })[\"catch\"](function (err) {\n        return dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      });\n    }\n  };\n}; // Delete Comment\n\nexport var deleteComment = function deleteComment(postId, commentId) {\n  return function (dispatch) {\n    axios[\"delete\"](unidad + \"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(function (res) {\n      return dispatch({\n        type: DELETE_COMMENT,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Like\n\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(unidad + \"/api/posts/like/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Remove Like\n\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(unidad + \"/api/posts/unlike/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set Loading state\n\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear errors\n\nexport var clearErrors = function clearErrors() {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/home/lolo/Descargas/paginaf4/src/actions/postActions.js"],"names":["axios","ADD_POST","GET_POST","GET_POSTS","GET_ERRORS","CLEAR_ERRORS","DELETE_COMMENT","POST_LOADING","DELETE_POST","unidad","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","err","response","addComment","postId","commentData","getPosts","setPostLoading","get","getPost","id","deletePost","window","confirm","deleteComment","commentId","addLike","removeLike"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n  ADD_POST,\n  GET_POST,\n  GET_POSTS,\n  GET_ERRORS,\n  CLEAR_ERRORS,\n  DELETE_COMMENT,\n  POST_LOADING,\n  DELETE_POST,\n} from './types';\n\n//let unidad=\"https://localhost\";\n//let unidad=\"https://adryan2.sytes.net:5000\";\n\n\n//let unidad=\"https://apisfsystem.herokuapp.com\"\nimport { unidad } from \"../variables\";\n\n\n// Add Post\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(unidad+'/api/posts', postData)\n    .then(res =>\n      dispatch({\n        type: ADD_POST,\n        payload: res.data,\n      })\n    ).catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(unidad+`/api/posts/comment/${postId}`, commentData)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data,\n      })\n    ).catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Get Post\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(unidad+'/api/posts')\n    .then(res =>\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data,\n      })\n    ).catch(err => \n      dispatch({\n        type: GET_POSTS,\n        payload: null,\n      })\n    );\n};\n\n// Get Post\nexport const getPost = (id) => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(unidad+`/api/posts/${id}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data,\n      })\n    ).catch(err => \n      dispatch({\n        type: GET_POST,\n        payload: null,\n      })\n    );\n};\n\n// Delete Post\nexport const deletePost = id => dispatch => {\n  if(window.confirm('Are you sure? This can NOT be undone!')) {\n    axios\n      .delete(unidad+`/api/posts/${id}`)\n      .then(res =>\n        dispatch({\n          type: DELETE_POST,\n          payload: id\n        })\n      )\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios\n    .delete(unidad+`/api/posts/comment/${postId}/${commentId}`)\n    .then(res =>\n      dispatch({\n        type: DELETE_COMMENT,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Like\nexport const addLike = id => dispatch => {\n  axios\n    .post(unidad+`/api/posts/like/${id}`)\n    .then(res => dispatch(getPosts()))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Remove Like\nexport const removeLike = id => dispatch => {\n  axios\n    .post(unidad+`/api/posts/unlike/${id}`)\n    .then(res => dispatch(getPosts()))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set Loading state\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};"]},"metadata":{},"sourceType":"module"}