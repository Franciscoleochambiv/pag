{"ast":null,"code":"import _toConsumableArray from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/lolo/Descargas/paginaflolo/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//import * as CONSTANTS from \"./Constants\";\nimport { GET_CARTPRO //  GET_CARTCATE,\n, ADD_ITEM_IN_CART, UPP_ITEM_IN_CART, SHOW_CART_DLG, DELETE_CART_ITEM, DELETE_CART, TOGGLE_MENU, UPDATE_CART_ITEM_QUANTITY, UPDATE_CART_ITEM_DESCRIPCION, UPDATE_CART_ITEM_PRICE, SET_CHECKEDOUT_ITEMS, SET_LOGGED_IN_USER, LOGOUT } from \"../actions/types.js\"; // If multiple components need access to some data, in that case we store such data in redux.\n\nvar initialState = {\n  cartItem: {},\n  cartItems: [],\n  showCartDialog: false,\n  showMenu: true,\n  checkedOutItems: [],\n  loggedInUser: null\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CARTPRO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartItem: action.payload,\n        loading: false\n      });\n\n    case ADD_ITEM_IN_CART:\n      {\n        var index = state.cartItems.findIndex(function (x) {\n          return x.id === action.payload.id;\n        }); // Is the item user wants to add already in the cart?\n\n        if (index !== -1) {\n          // Yes, update the quantity.\n          var cloneCartItems = _toConsumableArray(state.cartItems);\n\n          cloneCartItems[index] = _objectSpread(_objectSpread({}, cloneCartItems[index]), {}, {\n            quantity: state.cartItems[index].quantity + action.payload.quantity\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            cartItems: cloneCartItems\n          });\n        } // No, add a new item.\n\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: state.cartItems.concat(action.payload)\n        });\n      }\n\n    case SHOW_CART_DLG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showCartDialog: action.payload\n      });\n\n    case DELETE_CART_ITEM:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartItems: state.cartItems.filter(function (x) {\n          return x.id !== action.payload;\n        })\n      });\n\n    case DELETE_CART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartItems: []\n      });\n\n    case TOGGLE_MENU:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showMenu: !state.showMenu\n      });\n\n    case SET_LOGGED_IN_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loggedInUser: action.payload\n      });\n\n    case LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loggedInUser: null,\n        checkedOutItems: []\n      });\n\n    case SET_CHECKEDOUT_ITEMS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkedOutItems: action.payload\n      });\n\n    case UPDATE_CART_ITEM_QUANTITY:\n      {\n        var _index = state.cartItems.findIndex(function (x) {\n          return x.id === action.payload.id;\n        }); // User wants to update quantity of existing item.\n\n\n        if (_index !== -1) {\n          var _cloneCartItems = _toConsumableArray(state.cartItems);\n\n          _cloneCartItems[_index] = _objectSpread(_objectSpread({}, _cloneCartItems[_index]), {}, {\n            quantity: action.payload.quantity\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            cartItems: _cloneCartItems\n          });\n        } // If we couldn't find such item, do nothing.\n\n\n        return state;\n      }\n\n    case UPDATE_CART_ITEM_DESCRIPCION:\n      {\n        var _index2 = state.cartItems.findIndex(function (x) {\n          return x.id === action.payload.id;\n        }); // User wants to update quantity of existing item.\n\n\n        if (_index2 !== -1) {\n          var _cloneCartItems2 = _toConsumableArray(state.cartItems);\n\n          _cloneCartItems2[_index2] = _objectSpread(_objectSpread({}, _cloneCartItems2[_index2]), {}, {\n            descripcion: action.payload.descripcion\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            cartItems: _cloneCartItems2\n          });\n        } // If we couldn't find such item, do nothing.\n\n\n        return state;\n      }\n\n    case UPDATE_CART_ITEM_PRICE:\n      {\n        var _index3 = state.cartItems.findIndex(function (x) {\n          return x.id === action.payload.id;\n        }); // User wants to update quantity of existing item.\n\n\n        if (_index3 !== -1) {\n          var _cloneCartItems3 = _toConsumableArray(state.cartItems);\n\n          _cloneCartItems3[_index3] = _objectSpread(_objectSpread({}, _cloneCartItems3[_index3]), {}, {\n            precio: action.payload.precio\n          });\n          return _objectSpread(_objectSpread({}, state), {}, {\n            cartItems: _cloneCartItems3\n          });\n        } // If we couldn't find such item, do nothing.\n\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}\n; //export default rootReducer;","map":{"version":3,"sources":["/home/lolo/Descargas/paginaflolo/paginaf4/src/reducers/ventafileReducer.js"],"names":["GET_CARTPRO","ADD_ITEM_IN_CART","UPP_ITEM_IN_CART","SHOW_CART_DLG","DELETE_CART_ITEM","DELETE_CART","TOGGLE_MENU","UPDATE_CART_ITEM_QUANTITY","UPDATE_CART_ITEM_DESCRIPCION","UPDATE_CART_ITEM_PRICE","SET_CHECKEDOUT_ITEMS","SET_LOGGED_IN_USER","LOGOUT","initialState","cartItem","cartItems","showCartDialog","showMenu","checkedOutItems","loggedInUser","state","action","type","payload","loading","index","findIndex","x","id","cloneCartItems","quantity","concat","filter","descripcion","precio"],"mappings":"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","sourcesContent":["//import * as CONSTANTS from \"./Constants\";\n\n\nimport {  \n    GET_CARTPRO,\n  //  GET_CARTCATE,\n    ADD_ITEM_IN_CART,\n\t\tUPP_ITEM_IN_CART,\n    SHOW_CART_DLG,  \n    DELETE_CART_ITEM,\n    DELETE_CART,\n    TOGGLE_MENU,\n    UPDATE_CART_ITEM_QUANTITY,\n    UPDATE_CART_ITEM_DESCRIPCION,\n    UPDATE_CART_ITEM_PRICE,\n    SET_CHECKEDOUT_ITEMS,\n    SET_LOGGED_IN_USER,\n    LOGOUT,\n    \n    \n  } from \"../actions/types.js\";\n\n  \n// If multiple components need access to some data, in that case we store such data in redux.\nconst initialState = {\n  cartItem:{},  \n  cartItems: [],\n  showCartDialog: false,\n  showMenu: true,\n  checkedOutItems: [],\n  loggedInUser: null\n};\nexport default function(state = initialState, action) {\n//const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CARTPRO:\n        return {\n          ...state,\n           cartItem: action.payload,\n           loading: false\n        };    \n    case ADD_ITEM_IN_CART: {\n      let index = state.cartItems.findIndex(x => x.id === action.payload.id);\n\n      // Is the item user wants to add already in the cart?\n      if (index !== -1) {\n        // Yes, update the quantity.\n        let cloneCartItems = [...state.cartItems];\n        cloneCartItems[index] = {\n          ...cloneCartItems[index],\n          quantity: state.cartItems[index].quantity + action.payload.quantity\n        };\n\n        return { ...state, cartItems: cloneCartItems };\n      }\n\n      // No, add a new item.\n      return { ...state, cartItems: state.cartItems.concat(action.payload) };\n    }\n\n          \n\t\t\n    case SHOW_CART_DLG:\n      return { ...state, showCartDialog: action.payload };\n    case DELETE_CART_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(x => x.id !== action.payload)\n      };\n\n\n\n      case DELETE_CART:\n        return {\n          ...state,\n          cartItems: []\n        };\n    \n        \n\n\n    case TOGGLE_MENU:\n      return { ...state, showMenu: !state.showMenu };\n    case SET_LOGGED_IN_USER:\n      return { ...state, loggedInUser: action.payload };\n    case LOGOUT:\n      return { ...state, loggedInUser: null, checkedOutItems: [] };\n    case SET_CHECKEDOUT_ITEMS:\n      return { ...state, checkedOutItems: action.payload };\n    case UPDATE_CART_ITEM_QUANTITY: {\n      let index = state.cartItems.findIndex(x => x.id === action.payload.id);\n\n      // User wants to update quantity of existing item.\n      if (index !== -1) {\n        let cloneCartItems = [...state.cartItems];\n        cloneCartItems[index] = {\n          ...cloneCartItems[index],\n          quantity: action.payload.quantity\n        };\n\n        return { ...state, cartItems: cloneCartItems };\n      }\n\n      // If we couldn't find such item, do nothing.\n      return state;\n    }\n\n\n    case UPDATE_CART_ITEM_DESCRIPCION: {\n      let index = state.cartItems.findIndex(x => x.id === action.payload.id);\n\n      // User wants to update quantity of existing item.\n      if (index !== -1) {\n        let cloneCartItems = [...state.cartItems];\n        cloneCartItems[index] = {\n          ...cloneCartItems[index],\n          descripcion: action.payload.descripcion\n        };\n\n        return { ...state, cartItems: cloneCartItems };\n      }\n\n      // If we couldn't find such item, do nothing.\n      return state;\n    }\n\n\n\n    case UPDATE_CART_ITEM_PRICE: {\n      let index = state.cartItems.findIndex(x => x.id === action.payload.id);\n\n      // User wants to update quantity of existing item.\n      if (index !== -1) {\n        let cloneCartItems = [...state.cartItems];\n        cloneCartItems[index] = {\n          ...cloneCartItems[index],\n          precio: action.payload.precio\n        };\n\n        return { ...state, cartItems: cloneCartItems };\n      }\n\n      // If we couldn't find such item, do nothing.\n      return state;\n    }\n\n\n    default:\n      return state;\n  }\n};\n\n//export default rootReducer;\n"]},"metadata":{},"sourceType":"module"}