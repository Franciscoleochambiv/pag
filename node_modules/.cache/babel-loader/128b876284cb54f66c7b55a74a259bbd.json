{"ast":null,"code":"import _defineProperty from \"/home/lolo/Descargas/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/lolo/Descargas/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/lolo/Descargas/paginaf4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/lolo/Descargas/paginaf4/src/views/Cliente/ClienteFil.js\";\n\n//import React, { useState } from 'react'\nimport React, { useState, useEffect } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\"; //import CardBody from \"../../components/Card/CardBody.js\";\n\nimport CardFooter from \"../../components/Card/CardFooter.js\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addClientesql } from '../../actions/clienteActions';\nimport { fetch_sunatsql } from '../../actions/sunatActions';\nimport { fetch_dnisql } from '../../actions/dniActions'; //import { useForm } from 'react-hook-form'\n\nimport TextField from '@material-ui/core/TextField'; //import InputAdornment from '@material-ui/core/InputAdornment';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from \"axios\";\nimport Spinner from \"../../components/common/Spinner\"; //iimport TextField from '@material-ui/core/TextField';mport { Link } from 'react-router-dom';\n\nvar styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\nvar useStyles = makeStyles(styles);\n\nvar Cliente = function Cliente() {\n  //  let unidad=\"https://adryan2.sytes.net:7001\";\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var tip = useSelector(function (store) {\n    return store.clientefile.clientefiles;\n  });\n  var sunat = useSelector(function (store) {\n    return store.sunatfile.sunatfiles;\n  });\n  var sunatloading = useSelector(function (store) {\n    return store.sunatfile.loading;\n  });\n  var dnitodo = useSelector(function (store) {\n    return store.dnifile.dnifiles;\n  });\n  var dniloading = useSelector(function (store) {\n    return store.dnifile.loading;\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selector = _useState2[0],\n      setSelector = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      buscador = _useState4[0],\n      setBuscador = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mostrar = _useState8[0],\n      setMostrar = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      descripcion = _useState10[0],\n      setdescripcion = _useState10[1]; //const inputRef = useRef(null);  \n  //const [Entradas, setEntradas] = useState([])\n\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      count = _useState12[0],\n      setCount = _useState12[1]; //const {register, errors, handleSubmit} = useForm();\n  // const inputRef = useRef();\n\n\n  var nlen = tip.length;\n  var ndata = 0;\n\n  if (nlen > 0) {\n    ndata = parseInt(tip[0].codigo) + 1;\n  }\n\n  var _useState13 = useState({\n    codigo: ndata,\n    descripcion: '',\n    titular: '',\n    direccion: '',\n    direccion2: '',\n    direccion3: '',\n    tipo: 'C',\n    tipodoc: '1',\n    ndoc: '',\n    ndoc1: '',\n    telefono: '',\n    email: '',\n    fecha: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      datos = _useState14[0],\n      setDatos = _useState14[1];\n\n  useEffect(function () {\n    //   inputRef.current.focus();\n    setCount(ndata); //   dispatch(fetch_sunatsql(buscador))\n    // dispatch(getCurrentUmedidasql())\n    //setDatos({codigo:ndata})\n  }, [ndata]);\n\n  var handleInputChange = function handleInputChange(event) {\n    // console.log('data')\n    setDatos(_objectSpread(_objectSpread({}, datos), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var buscar = function buscar() {\n    console.log(datos.ndoc1);\n    var dndoc = datos.ndoc1;\n\n    if (dndoc.length == 11) {\n      dispatch(fetch_sunatsql(datos.ndoc1));\n      setSelector(1);\n      setLoading(true);\n    } else if (dndoc.length == 8) {\n      dispatch(fetch_dnisql(datos.ndoc1));\n      setSelector(3);\n      setLoading(true);\n    } else {\n      alert(\"Debe Digitar un Dni o Un Ruc\");\n      setDatos({\n        codigo: ndata,\n        descripcion: '',\n        titular: '',\n        direccion: '',\n        direccion2: '',\n        direccion3: '',\n        tipo: 'C',\n        tipodoc: '1',\n        ndoc: '',\n        ndoc1: '',\n        telefono: '',\n        email: '',\n        fecha: ''\n      });\n      return;\n    }\n  };\n\n  var enviarDatos = function enviarDatos(event) {\n    event.preventDefault();\n    console.log(datos);\n    console.log(count);\n    var data2 = {\n      codigo: count\n    };\n    console.log(data2);\n    Object.assign(datos, data2);\n    console.log(datos);\n    console.log(tip);\n    /*\n          let filteredContacts = tip.filter(\n            (task) =>{\n              let poetName = task.PVCL_NroDocIdentidad;\n              return  poetName.find===datos.ndoc;    \n               //return poetName.indexOf(poetName) !== -1 ; \n            })\n          console.log(filteredContacts) \n        */\n\n    var filteredContacts = tip.filter(function (numero) {\n      return numero.PVCL_NroDocIdentidad === datos.ndoc;\n    });\n    /*\n    \n                let  filteredContacts = tip.find( numero => numero.PVCL_NroDocIdentidad === datos.ndoc)\n                alert(JSON.stringify(filteredContacts))\n                alert(JSON.stringify(filteredContacts.length))\n                console.log(filteredContacts)  \n    \n                */\n\n    if (filteredContacts.length > 0) {\n      alert(\"El CLiente / Proveedor Ya  se encuentra Registrado \");\n    } else {\n      if (datos.tipodoc == '2') {\n        if (datos.ndoc.length == 11) {\n          dispatch(addClientesql(datos));\n        } else {\n          alert(\"El ruc debe tener 11 Numeros\");\n        }\n      } else {\n        dispatch(addClientesql(datos));\n      } //dispatch(getCurrentClientesql())   \n\n    } // alert(\"Procedemos a Actualizar los Datos\");\n    // let poetName=tip.PVCL_NroDocIdentidad\n    // let busca = poetName.indexOf(poetName) !== -1 ; \n    // console.log(busca)\n\n\n    event.target.reset();\n    setDatos({\n      codigo: ndata,\n      descripcion: '',\n      titular: '',\n      direccion: '',\n      direccion2: '',\n      direccion3: '',\n      tipo: 'C',\n      tipodoc: '1',\n      ndoc: '',\n      telefono: '',\n      email: '',\n      fecha: '',\n      ndoc1: ''\n    }); //podriamos llamar a la funcion de actualizar clientes \n  };\n\n  var tiposc = [{\n    value: 'C',\n    label: 'Clientes'\n  }, {\n    value: 'P',\n    label: 'Proveedores'\n  }];\n  var tipodoc = [{\n    value: '1',\n    label: 'DNI'\n  }, {\n    value: '2',\n    label: 'RUC'\n  }, {\n    value: '3',\n    label: 'OTROS'\n  }];\n  var dashbo = \"\";\n  var mostra = \"\";\n\n  if (loading) {\n    if (sunatloading) {\n      dashbo = /*#__PURE__*/React.createElement(Spinner, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      });\n    } else if (dniloading) {\n      dashbo = /*#__PURE__*/React.createElement(Spinner, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }\n      });\n    } else {\n      //setdescripcion()\n      if (selector == 1) {\n        console.log(sunat);\n        var arraysunat = Object.entries(sunat);\n        console.log(arraysunat);\n        console.log(Object.keys(sunat).length);\n        console.log(sunat.c0);\n        console.log(\"longitud de la cadena \");\n\n        if (Object.keys(sunat).length > 0) {\n          console.log(sunat); //  console.log(sunat[0].c2)\n          // setdescripcion(sunat[0].c2)\n\n          var dire = sunat.c6;\n\n          if (sunat.c5 != '-') {\n            dire = sunat.c5 + \" \" + dire;\n          }\n\n          if (sunat.c9 != '-') {\n            if (sunat.c9 != 'S/N') {\n              dire = dire + \" Nro. \" + sunat.c9;\n            } else {\n              dire = dire + \" \" + sunat.c9;\n            }\n          }\n\n          if (sunat.c10 != '-') {\n            dire = dire + \"Int. \" + sunat.c10;\n          }\n\n          if (sunat.c11 != '-') {\n            dire = dire + \" LOTE \" + sunat.c11;\n          }\n\n          if (sunat.c12 != '-') {\n            dire = dire + \" DPTO. \" + sunat.c12;\n          }\n\n          if (sunat.c13 != '-') {\n            dire = dire + \" Mzna. \" + sunat.c13;\n          }\n\n          if (sunat.c14 != '-') {\n            dire = dire + \" KM. \" + sunat.c14;\n          }\n\n          setdescripcion(sunat.c1); // if (sunat.c5)\t\t\n\n          setDatos({\n            codigo: ndata,\n            // descripcion:sunat[0].c2,\n            descripcion: sunat.c1,\n            // titular:sunat[0].c2,\n            titular: sunat.c1,\n            // direccion:sunat[0].c6+\" \"+sunat[0].c7+\" \"+sunat[0].c10+ \" \"+sunat[0].departamento+\" \"+sunat[0].nombre,\n            direccion: dire,\n            direccion2: dire,\n            direccion3: dire,\n            // direccion2:\n            //  sunat[0].c6+\" \"+sunat[0].c7+\" \"+sunat[0].c10+ \" \"+sunat[0].departamento+\" \"+sunat[0].nombre,\n            // direccion3:\n            //   sunat[0].c6+\" \"+sunat[0].c7+\" \"+sunat[0].c10+ \" \"+sunat[0].departamento+\" \"+sunat[0].nombre,\n            tipo: 'C',\n            tipodoc: '2',\n            ndoc: sunat.c0,\n            telefono: '111111',\n            email: 'grupo90pr@gmail.com',\n            fecha: ''\n          });\n        }\n      } //alert(dnitodo.nombres);\n      //alert\n\n\n      if (selector == 3) {\n        if (dnitodo.nombres != undefined) {\n          //console.log(dnitodo)\n          //console.log(dnitodo.nombres)\n          //setdescripcion(sunat[0].c2)\n          setDatos({\n            codigo: ndata,\n            descripcion: dnitodo.apellidoPaterno + \" \" + dnitodo.apellidoMaterno + \" \" + dnitodo.nombres,\n            titular: dnitodo.apellidoPaterno + \" \" + dnitodo.apellidoMaterno + \" \" + dnitodo.nombres,\n            direccion: '',\n            direccion2: '',\n            direccion3: '',\n            tipo: 'C',\n            tipodoc: '1',\n            ndoc: dnitodo.dni,\n            telefono: '111111',\n            email: 'grupo90pr@gmail.com',\n            fecha: ''\n          });\n        }\n      }\n\n      setLoading(false); // setMostrar(false)\n    }\n  }\n\n  mostra = /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Codigo\",\n    id: \"codigo\",\n    value: ndata,\n    className: classes.textField,\n    helperText: \"Codigo del Cliente o Proveedor\",\n    margin: \"dense\",\n    variant: \"outlined\",\n    name: \"codigo\",\n    required: true,\n    onChange: handleInputChange,\n    onFocus: function onFocus() {\n      return setCount(ndata);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"descripcion\",\n    label: \"Raz\\xF3n Social\",\n    required: true,\n    value: datos.descripcion,\n    name: \"descripcion\",\n    onChange: handleInputChange,\n    style: {\n      margin: 8,\n      width: \"95%\"\n    },\n    placeholder: \"Razon Social\",\n    helperText: \"Nombre de la Empresa\",\n    fullWidth: true,\n    margin: \"dense\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"titular\",\n    label: \"Titular\",\n    name: \"titular\",\n    value: datos.titular,\n    required: true,\n    onChange: handleInputChange,\n    style: {\n      margin: 8,\n      width: \"95%\"\n    },\n    placeholder: \"Titular\",\n    helperText: \"Nombre\",\n    fullWidth: true,\n    margin: \"dense\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"direccion\",\n    label: \"Direccion\",\n    name: \"direccion\",\n    value: datos.direccion,\n    onChange: handleInputChange,\n    style: {\n      margin: 8,\n      width: \"95%\"\n    },\n    placeholder: \"Direccion Principal\",\n    helperText: \"direccion\",\n    fullWidth: true,\n    margin: \"dense\",\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"direccion2\",\n    label: \"Direccion2\",\n    name: \"direccion2\",\n    value: datos.direccion2,\n    onChange: handleInputChange,\n    style: {\n      margin: 8,\n      width: \"95%\"\n    },\n    placeholder: \"Direccion2\",\n    helperText: \"Direccion 2\",\n    required: true,\n    fullWidth: true,\n    margin: \"dense\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"direccion3\",\n    label: \"Direccion\",\n    name: \"direccion3\",\n    value: datos.direccion3,\n    onChange: handleInputChange,\n    style: {\n      margin: 8,\n      width: \"95%\"\n    },\n    placeholder: \"Direccion 3\",\n    helperText: \"Direccion 3\",\n    fullWidth: true,\n    required: true,\n    margin: \"dense\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"tipo\",\n    select: true,\n    label: \"Select\",\n    value: datos.tipo,\n    name: \"tipo\",\n    onChange: handleInputChange,\n    helperText: \"Seleccione un tipo de Cliente\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 15\n    }\n  }, tiposc.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 21\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    id: \"tipodoc\",\n    select: true,\n    label: \"Select\",\n    value: datos.tipodoc,\n    name: \"tipodoc\",\n    onChange: handleInputChange,\n    helperText: \"Seleccione un tipo de Documentgo\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 17\n    }\n  }, tipodoc.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 21\n      }\n    }, option.label);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    label: \"N.Documento Identidad\",\n    id: \"ndoc\",\n    value: datos.ndoc,\n    className: classes.textField,\n    helperText: \"Numero de Documento\",\n    margin: \"dense\",\n    variant: \"outlined\",\n    required: true,\n    name: \"ndoc\",\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Telefono\",\n    id: \"telefono\",\n    value: datos.telefono,\n    className: classes.textField,\n    helperText: \"Numero de Telefono\",\n    margin: \"dense\",\n    variant: \"outlined\",\n    name: \"telefono\",\n    required: true,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    type: \"email\",\n    id: \"email\",\n    className: classes.textField,\n    value: datos.email,\n    helperText: \"Email\",\n    margin: \"dense\",\n    variant: \"outlined\",\n    name: \"email\",\n    required: true,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    id: \"fecha\",\n    value: datos.fecha,\n    className: classes.textField,\n    helperText: \"Fecha\",\n    margin: \"dense\",\n    variant: \"outlined\",\n    name: \"fecha\",\n    required: true,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 18\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: enviarDatos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 15\n    }\n  }, dashbo), /*#__PURE__*/React.createElement(TextField, {\n    label: \"N.Documento Identidad\",\n    id: \"ndoc1\",\n    className: classes.textField,\n    helperText: \"Numero de Documento\",\n    margin: \"dense\",\n    variant: \"outlined\",\n    name: \"ndoc1\",\n    onChange: handleInputChange,\n    inputProps: {\n      autoFocus: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    type: \"button\",\n    onClick: function onClick() {\n      return buscar();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 20\n    }\n  }, \"Buscar\"), mostra, /*#__PURE__*/React.createElement(CardFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 15\n    }\n  }, \"Grabar\")))))));\n};\n\nexport default Cliente;\n/*\n console.log(sunat)\n\n\n       if (sunat.length>0){\n        setDatos1({          \n          codigo:ndata,\n          descripcion:sunat.c2,\n          titular:sunat.c2,\n          direccion:sunat.c6+\" \"+sunat.c7+\" \"+sunat.c10+\" \"+sunat.departamento+\" \"+sunat.nombre,\n          direccion2:sunat.c6+\" \"+sunat.c7+\" \"+sunat.c10+\" \"+sunat.departamento+\" \"+sunat.nombre,\n          direccion3:sunat.c6+\" \"+sunat.c7+\" \"+sunat.c10+\" \"+sunat.departamento+\" \"+sunat.nombre,\n          tipo:'C',\n          tipodoc:'2',\n          ndoc:sunat.c1,\n          telefono:'',\n          email:'',\n          fecha:'',\n        })\n\n\n       }\n       else{\n\n       }\n\n*/","map":{"version":3,"sources":["/home/lolo/Descargas/paginaf4/src/views/Cliente/ClienteFil.js"],"names":["React","useState","useEffect","makeStyles","GridItem","GridContainer","Button","Card","CardHeader","CardFooter","useDispatch","useSelector","addClientesql","fetch_sunatsql","fetch_dnisql","TextField","MenuItem","axios","Spinner","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","Cliente","classes","dispatch","tip","store","clientefile","clientefiles","sunat","sunatfile","sunatfiles","sunatloading","loading","dnitodo","dnifile","dnifiles","dniloading","selector","setSelector","buscador","setBuscador","setLoading","mostrar","setMostrar","descripcion","setdescripcion","count","setCount","nlen","length","ndata","parseInt","codigo","titular","direccion","direccion2","direccion3","tipo","tipodoc","ndoc","ndoc1","telefono","email","fecha","datos","setDatos","handleInputChange","event","target","name","value","buscar","console","log","dndoc","alert","enviarDatos","preventDefault","data2","Object","assign","filteredContacts","filter","numero","PVCL_NroDocIdentidad","reset","tiposc","label","dashbo","mostra","arraysunat","entries","keys","c0","dire","c6","c5","c9","c10","c11","c12","c13","c14","c1","nombres","undefined","apellidoPaterno","apellidoMaterno","dni","textField","width","shrink","map","option","autoFocus"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAAUC,WAAV,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,YAAT,QAA6B,0BAA7B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB,C,CAGA;;AAGA,IAAMC,MAAM,GAAG;AACbC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,KAAK,EAAE,uBADU;AAEjBC,IAAAA,MAAM,EAAE,GAFS;AAGjBC,IAAAA,QAAQ,EAAE,MAHO;AAIjBC,IAAAA,SAAS,EAAE,GAJM;AAKjBC,IAAAA,YAAY,EAAE;AALG,GADN;AAQbC,EAAAA,cAAc,EAAE;AACdL,IAAAA,KAAK,EAAE,SADO;AAEdG,IAAAA,SAAS,EAAE,KAFG;AAGdG,IAAAA,SAAS,EAAE,MAHG;AAIdC,IAAAA,UAAU,EAAE,KAJE;AAKdC,IAAAA,UAAU,EAAE,4CALE;AAMdJ,IAAAA,YAAY,EAAE,KANA;AAOdK,IAAAA,cAAc,EAAE;AAPF;AARH,CAAf;AAmBA,IAAMC,SAAS,GAAG5B,UAAU,CAACgB,MAAD,CAA5B;;AAEA,IAAMa,OAAO,GAAG,SAAVA,OAAU,GAAM;AACtB;AACE,MAAMC,OAAO,GAAGF,SAAS,EAAzB;AAEG,MAAMG,QAAQ,GAAGxB,WAAW,EAA5B;AACA,MAAMyB,GAAG,GAAGxB,WAAW,CAAE,UAAAyB,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAN,CAAkBC,YAAtB;AAAA,GAAP,CAAvB;AACA,MAAMC,KAAK,GAAG5B,WAAW,CAAE,UAAAyB,KAAK;AAAA,WAAIA,KAAK,CAACI,SAAN,CAAgBC,UAApB;AAAA,GAAP,CAAzB;AACA,MAAMC,YAAY,GAAG/B,WAAW,CAAE,UAAAyB,KAAK;AAAA,WAAIA,KAAK,CAACI,SAAN,CAAgBG,OAApB;AAAA,GAAP,CAAhC;AAEA,MAAMC,OAAO,GAAGjC,WAAW,CAAE,UAAAyB,KAAK;AAAA,WAAIA,KAAK,CAACS,OAAN,CAAcC,QAAlB;AAAA,GAAP,CAA3B;AACA,MAAMC,UAAU,GAAGpC,WAAW,CAAE,UAAAyB,KAAK;AAAA,WAAIA,KAAK,CAACS,OAAN,CAAcF,OAAlB;AAAA,GAAP,CAA9B;;AAEA,kBAAgC1C,QAAQ,CAAC,CAAD,CAAxC;AAAA;AAAA,MAAO+C,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,mBAAgChD,QAAQ,CAAC,CAAD,CAAxC;AAAA;AAAA,MAAOiD,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,mBAA8BlD,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAO0C,OAAP;AAAA,MAAgBS,UAAhB;;AACA,mBAA8BnD,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOoD,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,mBAAsCrD,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOsD,WAAP;AAAA,MAAoBC,cAApB,kBApBiB,CAqBjB;AACA;;;AACA,oBAA0BvD,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAOwD,KAAP;AAAA,MAAcC,QAAd,kBAvBiB,CAwBjB;AACD;;;AAIC,MAAMC,IAAI,GAACxB,GAAG,CAACyB,MAAf;AACC,MAAIC,KAAK,GAAC,CAAV;;AAGA,MAAIF,IAAI,GAAC,CAAT,EAAW;AACTE,IAAAA,KAAK,GAACC,QAAQ,CAAC3B,GAAG,CAAC,CAAD,CAAH,CAAO4B,MAAR,CAAR,GAAwB,CAA9B;AAGD;;AAID,oBAAuB9D,QAAQ,CAAC;AAC9B8D,IAAAA,MAAM,EAACF,KADuB;AAE9BN,IAAAA,WAAW,EAAC,EAFkB;AAG9BS,IAAAA,OAAO,EAAC,EAHsB;AAI9BC,IAAAA,SAAS,EAAC,EAJoB;AAK9BC,IAAAA,UAAU,EAAC,EALmB;AAM9BC,IAAAA,UAAU,EAAC,EANmB;AAO9BC,IAAAA,IAAI,EAAC,GAPyB;AAQ9BC,IAAAA,OAAO,EAAC,GARsB;AAS9BC,IAAAA,IAAI,EAAC,EATyB;AAU9BC,IAAAA,KAAK,EAAC,EAVwB;AAW9BC,IAAAA,QAAQ,EAAC,EAXqB;AAY9BC,IAAAA,KAAK,EAAC,EAZwB;AAa9BC,IAAAA,KAAK,EAAC;AAbwB,GAAD,CAA/B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAaC,QAAb;;AAiBA1E,EAAAA,SAAS,CAAC,YAAM;AACd;AACAwD,IAAAA,QAAQ,CAACG,KAAD,CAAR,CAFc,CAGjB;AACE;AACC;AACE,GANK,EAMJ,CAACA,KAAD,CANI,CAAT;;AAYF,MAAQgB,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACC,KAAD,EAAS;AACjC;AACCF,IAAAA,QAAQ,iCACHD,KADG,2BAELG,KAAK,CAACC,MAAN,CAAaC,IAFR,EAEcF,KAAK,CAACC,MAAN,CAAaE,KAF3B,GAAR;AAKD,GAPF;;AASC,MAAMC,MAAM,GAAI,SAAVA,MAAU,GAAK;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACJ,KAAlB;AACA,QAAIc,KAAK,GAACV,KAAK,CAACJ,KAAhB;;AAEC,QAAIc,KAAK,CAACzB,MAAN,IAAc,EAAlB,EAAqB;AACnB1B,MAAAA,QAAQ,CAACrB,cAAc,CAAC8D,KAAK,CAACJ,KAAP,CAAf,CAAR;AACAtB,MAAAA,WAAW,CAAC,CAAD,CAAX;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AAED,KALD,MAMK,IAAIiC,KAAK,CAACzB,MAAN,IAAc,CAAlB,EAAoB;AACvB1B,MAAAA,QAAQ,CAACpB,YAAY,CAAC6D,KAAK,CAACJ,KAAP,CAAb,CAAR;AACAtB,MAAAA,WAAW,CAAC,CAAD,CAAX;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AAGD,KANI,MAOD;AACFkC,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACAV,MAAAA,QAAQ,CAAC;AACPb,QAAAA,MAAM,EAACF,KADA;AAEPN,QAAAA,WAAW,EAAC,EAFL;AAGPS,QAAAA,OAAO,EAAC,EAHD;AAIPC,QAAAA,SAAS,EAAC,EAJH;AAKPC,QAAAA,UAAU,EAAC,EALJ;AAMPC,QAAAA,UAAU,EAAC,EANJ;AAOPC,QAAAA,IAAI,EAAC,GAPE;AAQPC,QAAAA,OAAO,EAAC,GARD;AASPC,QAAAA,IAAI,EAAC,EATE;AAUPC,QAAAA,KAAK,EAAC,EAVC;AAWPC,QAAAA,QAAQ,EAAC,EAXF;AAYPC,QAAAA,KAAK,EAAC,EAZC;AAaPC,QAAAA,KAAK,EAAC;AAbC,OAAD,CAAR;AAeA;AACD;AAEH,GArCD;;AAuCA,MAAMa,WAAW,GAAC,SAAZA,WAAY,CAACT,KAAD,EAAU;AACrBA,IAAAA,KAAK,CAACU,cAAN;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAZ;AACA,QAAIgC,KAAK,GAAC;AAAC1B,MAAAA,MAAM,EAACN;AAAR,KAAV;AACA0B,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AAGAC,IAAAA,MAAM,CAACC,MAAP,CAAchB,KAAd,EAAoBc,KAApB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYjD,GAAZ;AAEN;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGY,QAAIyD,gBAAgB,GAAGzD,GAAG,CAAC0D,MAAJ,CAAW,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,oBAAP,KAA+BpB,KAAK,CAACL,IAAzC;AAAA,KAAjB,CAAvB;AAGZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY,QAAIsB,gBAAgB,CAAChC,MAAjB,GAAwB,CAA5B,EAA8B;AAC5B0B,MAAAA,KAAK,CAAC,qDAAD,CAAL;AAED,KAHD,MAII;AACD,UAAIX,KAAK,CAACN,OAAN,IAAe,GAAnB,EAAuB;AAChB,YAAIM,KAAK,CAACL,IAAN,CAAWV,MAAX,IAAmB,EAAvB,EAA0B;AACxB1B,UAAAA,QAAQ,CAACtB,aAAa,CAAC+D,KAAD,CAAd,CAAR;AACD,SAFD,MAGI;AACFW,UAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AACL,OAPH,MAQI;AACCpD,QAAAA,QAAQ,CAACtB,aAAa,CAAC+D,KAAD,CAAd,CAAR;AAEJ,OAZA,CAaF;;AAEC,KAxDkB,CAyD5B;AAGM;AACA;AACA;;;AAYCG,IAAAA,KAAK,CAACC,MAAN,CAAaiB,KAAb;AAEApB,IAAAA,QAAQ,CAAC;AACPb,MAAAA,MAAM,EAACF,KADA;AAEPN,MAAAA,WAAW,EAAC,EAFL;AAGPS,MAAAA,OAAO,EAAC,EAHD;AAIPC,MAAAA,SAAS,EAAC,EAJH;AAKPC,MAAAA,UAAU,EAAC,EALJ;AAMPC,MAAAA,UAAU,EAAC,EANJ;AAOPC,MAAAA,IAAI,EAAC,GAPE;AAQPC,MAAAA,OAAO,EAAC,GARD;AASPC,MAAAA,IAAI,EAAC,EATE;AAUPE,MAAAA,QAAQ,EAAC,EAVF;AAWPC,MAAAA,KAAK,EAAC,EAXC;AAYPC,MAAAA,KAAK,EAAC,EAZC;AAaPH,MAAAA,KAAK,EAAC;AAbC,KAAD,CAAR,CA5EqB,CA2FxB;AAEH,GA7FD;;AA+FA,MAAM0B,MAAM,GAAG,CACd;AACEhB,IAAAA,KAAK,EAAE,GADT;AAEEiB,IAAAA,KAAK,EAAE;AAFT,GADc,EAKd;AACEjB,IAAAA,KAAK,EAAE,GADT;AAEEiB,IAAAA,KAAK,EAAE;AAFT,GALc,CAAf;AAWD,MAAM7B,OAAO,GAAG,CACd;AACEY,IAAAA,KAAK,EAAE,GADT;AAEEiB,IAAAA,KAAK,EAAE;AAFT,GADc,EAKd;AACEjB,IAAAA,KAAK,EAAE,GADT;AAEEiB,IAAAA,KAAK,EAAE;AAFT,GALc,EASd;AACEjB,IAAAA,KAAK,EAAE,GADT;AAEEiB,IAAAA,KAAK,EAAE;AAFT,GATc,CAAhB;AAiBJ,MAAIC,MAAM,GAAE,EAAZ;AACA,MAAIC,MAAM,GAAC,EAAX;;AAEA,MAAIzD,OAAJ,EAAY;AACJ,QAAID,YAAJ,EAAiB;AACfyD,MAAAA,MAAM,gBACJ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD,MAKK,IAAGpD,UAAH,EAAc;AACfoD,MAAAA,MAAM,gBACJ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGH,KAJI,MAKD;AACF;AACD,UAAInD,QAAQ,IAAE,CAAd,EAAgB;AAEvBmC,QAAAA,OAAO,CAACC,GAAR,CAAY7C,KAAZ;AACA,YAAI8D,UAAU,GAAGX,MAAM,CAACY,OAAP,CAAe/D,KAAf,CAAjB;AACA4C,QAAAA,OAAO,CAACC,GAAR,CAAYiB,UAAZ;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACa,IAAP,CAAYhE,KAAZ,EAAmBqB,MAA/B;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAY7C,KAAK,CAACiE,EAAlB;AACcrB,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AACA,YAAIM,MAAM,CAACa,IAAP,CAAYhE,KAAZ,EAAmBqB,MAAnB,GAA0B,CAA9B,EAAgC;AAC5BuB,UAAAA,OAAO,CAACC,GAAR,CAAY7C,KAAZ,EAD4B,CAG9B;AAEC;;AACP,cAAIkE,IAAI,GAAGlE,KAAK,CAACmE,EAAjB;;AACP,cAAInE,KAAK,CAACoE,EAAN,IAAU,GAAd,EAAkB;AACDF,YAAAA,IAAI,GAAGlE,KAAK,CAACoE,EAAN,GAAS,GAAT,GAAaF,IAApB;AACd;;AACH,cAAIlE,KAAK,CAACqE,EAAN,IAAU,GAAd,EAAkB;AAClB,gBAAIrE,KAAK,CAACqE,EAAN,IAAU,KAAd,EAAoB;AACKH,cAAAA,IAAI,GAAGA,IAAI,GAAC,QAAL,GAAclE,KAAK,CAACqE,EAA3B;AACxB,aAFD,MAGK;AACoBH,cAAAA,IAAI,GAACA,IAAI,GAAE,GAAN,GAAUlE,KAAK,CAACqE,EAArB;AACvB;AACC;;AACH,cAAIrE,KAAK,CAACsE,GAAN,IAAW,GAAf,EAAmB;AACFJ,YAAAA,IAAI,GAAGA,IAAI,GAAC,OAAL,GAAalE,KAAK,CAACsE,GAA1B;AACd;;AACH,cAAItE,KAAK,CAACuE,GAAN,IAAW,GAAf,EAAmB;AACFL,YAAAA,IAAI,GAAGA,IAAI,GAAC,QAAL,GAAclE,KAAK,CAACuE,GAA3B;AACd;;AACH,cAAIvE,KAAK,CAACwE,GAAN,IAAW,GAAf,EAAmB;AACFN,YAAAA,IAAI,GAAGA,IAAI,GAAC,SAAL,GAAelE,KAAK,CAACwE,GAA5B;AACd;;AACH,cAAIxE,KAAK,CAACyE,GAAN,IAAW,GAAf,EAAmB;AACFP,YAAAA,IAAI,GAAGA,IAAI,GAAC,SAAL,GAAelE,KAAK,CAACyE,GAA5B;AACd;;AACH,cAAIzE,KAAK,CAAC0E,GAAN,IAAW,GAAf,EAAmB;AACFR,YAAAA,IAAI,GAAGA,IAAI,GAAC,OAAL,GAAalE,KAAK,CAAC0E,GAA1B;AACd;;AAGYzD,UAAAA,cAAc,CAACjB,KAAK,CAAC2E,EAAP,CAAd,CAnC4B,CAoCpC;;AAEQtC,UAAAA,QAAQ,CAAC;AACPb,YAAAA,MAAM,EAACF,KADA;AAER;AACCN,YAAAA,WAAW,EAAChB,KAAK,CAAC2E,EAHX;AAIR;AACClD,YAAAA,OAAO,EAACzB,KAAK,CAAC2E,EALP;AAMR;AACCjD,YAAAA,SAAS,EAACwC,IAPH;AAQPvC,YAAAA,UAAU,EAACuC,IARJ;AASPtC,YAAAA,UAAU,EAACsC,IATJ;AAUR;AACN;AACM;AACb;AACcrC,YAAAA,IAAI,EAAC,GAdE;AAePC,YAAAA,OAAO,EAAC,GAfD;AAgBPC,YAAAA,IAAI,EAAC/B,KAAK,CAACiE,EAhBJ;AAkBPhC,YAAAA,QAAQ,EAAC,QAlBF;AAmBPC,YAAAA,KAAK,EAAC,qBAnBC;AAoBPC,YAAAA,KAAK,EAAC;AApBC,WAAD,CAAR;AAuBD;AAET,OAzEE,CA4EA;AACA;;;AACH,UAAK1B,QAAQ,IAAI,CAAjB,EAAmB;AACZ,YAAIJ,OAAO,CAACuE,OAAR,IAAiBC,SAArB,EAA+B;AAC7B;AACA;AAEA;AAEAxC,UAAAA,QAAQ,CAAC;AACPb,YAAAA,MAAM,EAACF,KADA;AAEPN,YAAAA,WAAW,EAACX,OAAO,CAACyE,eAAR,GAAwB,GAAxB,GAA4BzE,OAAO,CAAC0E,eAApC,GAAoD,GAApD,GAAwD1E,OAAO,CAACuE,OAFrE;AAGPnD,YAAAA,OAAO,EAACpB,OAAO,CAACyE,eAAR,GAAwB,GAAxB,GAA4BzE,OAAO,CAAC0E,eAApC,GAAoD,GAApD,GAAwD1E,OAAO,CAACuE,OAHjE;AAIPlD,YAAAA,SAAS,EAAC,EAJH;AAKPC,YAAAA,UAAU,EAAC,EALJ;AAMPC,YAAAA,UAAU,EAAC,EANJ;AAOPC,YAAAA,IAAI,EAAC,GAPE;AAQPC,YAAAA,OAAO,EAAC,GARD;AASPC,YAAAA,IAAI,EAAC1B,OAAO,CAAC2E,GATN;AAUP/C,YAAAA,QAAQ,EAAC,QAVF;AAWPC,YAAAA,KAAK,EAAC,qBAXC;AAYPC,YAAAA,KAAK,EAAC;AAZC,WAAD,CAAR;AAiBD;AACP;;AAMAtB,MAAAA,UAAU,CAAC,KAAD,CAAV,CA7GE,CA8GH;AAKA;AAER;;AAGCgD,EAAAA,MAAM,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEG,oBAAC,SAAD;AACO,IAAA,KAAK,EAAC,QADb;AAEO,IAAA,EAAE,EAAC,QAFV;AAGO,IAAA,KAAK,EAAEvC,KAHd;AAIO,IAAA,SAAS,EAAE5B,OAAO,CAACuF,SAJ1B;AAKO,IAAA,UAAU,EAAC,gCALlB;AAMO,IAAA,MAAM,EAAC,OANd;AAOO,IAAA,OAAO,EAAC,UAPf;AAQO,IAAA,IAAI,EAAC,QARZ;AASO,IAAA,QAAQ,MATf;AAaO,IAAA,QAAQ,EAAE3C,iBAbjB;AAcO,IAAA,OAAO,EAAE;AAAA,aAAMnB,QAAQ,CAACG,KAAD,CAAd;AAAA,KAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAsBM,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAEc,KAAK,CAACpB,WAJf;AAKE,IAAA,IAAI,EAAC,aALP;AAME,IAAA,QAAQ,EAAEsB,iBANZ;AAOE,IAAA,KAAK,EAAE;AAAEvD,MAAAA,MAAM,EAAE,CAAV;AAAYmG,MAAAA,KAAK,EAAC;AAAlB,KAPT;AAQE,IAAA,WAAW,EAAC,cARd;AASE,IAAA,UAAU,EAAC,sBATb;AAUE,IAAA,SAAS,MAVX;AAWE,IAAA,MAAM,EAAC,OAXT;AAYE,IAAA,eAAe,EAAE;AACfC,MAAAA,MAAM,EAAE;AADO,KAZnB;AAeE,IAAA,OAAO,EAAC,UAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBN,eAuCM,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAE/C,KAAK,CAACX,OAJf;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,QAAQ,EAAEa,iBANZ;AAOE,IAAA,KAAK,EAAE;AAAEvD,MAAAA,MAAM,EAAE,CAAV;AAAYmG,MAAAA,KAAK,EAAC;AAAlB,KAPT;AAQE,IAAA,WAAW,EAAC,SARd;AASE,IAAA,UAAU,EAAC,QATb;AAUE,IAAA,SAAS,MAVX;AAWE,IAAA,MAAM,EAAC,OAXT;AAYE,IAAA,eAAe,EAAE;AACfC,MAAAA,MAAM,EAAE;AADO,KAZnB;AAeE,IAAA,OAAO,EAAC,UAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCN,eAyDS,oBAAC,SAAD;AACD,IAAA,EAAE,EAAC,WADF;AAED,IAAA,KAAK,EAAC,WAFL;AAGD,IAAA,IAAI,EAAC,WAHJ;AAID,IAAA,KAAK,EAAE/C,KAAK,CAACV,SAJZ;AAKD,IAAA,QAAQ,EAAEY,iBALT;AAMD,IAAA,KAAK,EAAE;AAAEvD,MAAAA,MAAM,EAAE,CAAV;AAAYmG,MAAAA,KAAK,EAAC;AAAlB,KANN;AAOD,IAAA,WAAW,EAAC,qBAPX;AAQD,IAAA,UAAU,EAAC,WARV;AASD,IAAA,SAAS,MATR;AAUD,IAAA,MAAM,EAAC,OAVN;AAWD,IAAA,QAAQ,MAXP;AAYD,IAAA,eAAe,EAAE;AACfC,MAAAA,MAAM,EAAE;AADO,KAZhB;AAeD,IAAA,OAAO,EAAC,UAfP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDT,eA0EO,oBAAC,SAAD;AACC,IAAA,EAAE,EAAC,YADJ;AAEC,IAAA,KAAK,EAAC,YAFP;AAGC,IAAA,IAAI,EAAC,YAHN;AAIC,IAAA,KAAK,EAAE/C,KAAK,CAACT,UAJd;AAKC,IAAA,QAAQ,EAAEW,iBALX;AAMC,IAAA,KAAK,EAAE;AAAEvD,MAAAA,MAAM,EAAE,CAAV;AAAYmG,MAAAA,KAAK,EAAC;AAAlB,KANR;AAOC,IAAA,WAAW,EAAC,YAPb;AAQC,IAAA,UAAU,EAAC,aARZ;AASC,IAAA,QAAQ,MATT;AAUC,IAAA,SAAS,MAVV;AAWC,IAAA,MAAM,EAAC,OAXR;AAYC,IAAA,eAAe,EAAE;AACfC,MAAAA,MAAM,EAAE;AADO,KAZlB;AAeC,IAAA,OAAO,EAAC,UAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1EP,eA2FO,oBAAC,SAAD;AACC,IAAA,EAAE,EAAC,YADJ;AAEC,IAAA,KAAK,EAAC,WAFP;AAGC,IAAA,IAAI,EAAC,YAHN;AAIC,IAAA,KAAK,EAAE/C,KAAK,CAACR,UAJd;AAKC,IAAA,QAAQ,EAAEU,iBALX;AAMC,IAAA,KAAK,EAAE;AAAEvD,MAAAA,MAAM,EAAE,CAAV;AAAYmG,MAAAA,KAAK,EAAC;AAAlB,KANR;AAOC,IAAA,WAAW,EAAC,aAPb;AAQC,IAAA,UAAU,EAAC,aARZ;AASC,IAAA,SAAS,MATV;AAUC,IAAA,QAAQ,MAVT;AAWC,IAAA,MAAM,EAAC,OAXR;AAYC,IAAA,eAAe,EAAE;AACfC,MAAAA,MAAM,EAAE;AADO,KAZlB;AAeC,IAAA,OAAO,EAAC,UAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3FP,eA6GM,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,MAAM,MAFV;AAGI,IAAA,KAAK,EAAC,QAHV;AAII,IAAA,KAAK,EAAE/C,KAAK,CAACP,IAJjB;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,QAAQ,EAAES,iBANd;AAOI,IAAA,UAAU,EAAC,+BAPf;AAQI,IAAA,OAAO,EAAC,UARZ;AASI,IAAA,MAAM,EAAC,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKoB,MAAM,CAAC0B,GAAP,CAAW,UAACC,MAAD;AAAA,wBACV,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAAC3C,KAAtB;AAA6B,MAAA,KAAK,EAAE2C,MAAM,CAAC3C,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG2C,MAAM,CAAC1B,KADV,CADU;AAAA,GAAX,CAXL,CA7GN,eA8HQ,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,KAAK,EAAEvB,KAAK,CAACN,OAJf;AAKE,IAAA,IAAI,EAAC,SALP;AAME,IAAA,QAAQ,EAAEQ,iBANZ;AAOE,IAAA,UAAU,EAAC,kCAPb;AAQE,IAAA,OAAO,EAAC,UARV;AASE,IAAA,MAAM,EAAC,OATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGR,OAAO,CAACsD,GAAR,CAAY,UAACC,MAAD;AAAA,wBACX,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAAC3C,KAAtB;AAA6B,MAAA,KAAK,EAAE2C,MAAM,CAAC3C,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG2C,MAAM,CAAC1B,KADV,CADW;AAAA,GAAZ,CAXH,CA9HR,eAgJQ,oBAAC,SAAD;AACA,IAAA,KAAK,EAAC,uBADN;AAEA,IAAA,EAAE,EAAC,MAFH;AAGA,IAAA,KAAK,EAAEvB,KAAK,CAACL,IAHb;AAIA,IAAA,SAAS,EAAErC,OAAO,CAACuF,SAJnB;AAKA,IAAA,UAAU,EAAC,qBALX;AAMA,IAAA,MAAM,EAAC,OANP;AAOA,IAAA,OAAO,EAAC,UAPR;AAQA,IAAA,QAAQ,MARR;AASA,IAAA,IAAI,EAAC,MATL;AAUA,IAAA,QAAQ,EAAE3C,iBAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhJR,eAgKS,oBAAC,SAAD;AACC,IAAA,KAAK,EAAC,UADP;AAEC,IAAA,EAAE,EAAC,UAFJ;AAGC,IAAA,KAAK,EAAEF,KAAK,CAACH,QAHd;AAIC,IAAA,SAAS,EAAEvC,OAAO,CAACuF,SAJpB;AAKC,IAAA,UAAU,EAAC,oBALZ;AAMC,IAAA,MAAM,EAAC,OANR;AAOC,IAAA,OAAO,EAAC,UAPT;AAQC,IAAA,IAAI,EAAC,UARN;AASC,IAAA,QAAQ,MATT;AAUC,IAAA,QAAQ,EAAE3C,iBAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhKT,eA4KQ,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,SAAS,EAAE5C,OAAO,CAACuF,SAJrB;AAKE,IAAA,KAAK,EAAE7C,KAAK,CAACF,KALf;AAME,IAAA,UAAU,EAAC,OANb;AAOE,IAAA,MAAM,EAAC,OAPT;AAQE,IAAA,OAAO,EAAC,UARV;AASE,IAAA,IAAI,EAAC,OATP;AAUE,IAAA,QAAQ,MAVV;AAWE,IAAA,QAAQ,EAAEI,iBAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5KR,eAyLS,oBAAC,SAAD;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,EAAE,EAAC,OAHJ;AAIC,IAAA,KAAK,EAAEF,KAAK,CAACD,KAJd;AAKC,IAAA,SAAS,EAAEzC,OAAO,CAACuF,SALpB;AAMC,IAAA,UAAU,EAAC,OANZ;AAOC,IAAA,MAAM,EAAC,OAPR;AAQC,IAAA,OAAO,EAAC,UART;AASC,IAAA,IAAI,EAAC,OATN;AAUC,IAAA,QAAQ,MAVT;AAWC,IAAA,QAAQ,EAAE3C,iBAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzLT,CADN;AAwNA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAM,IAAA,QAAQ,EAAEU,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,MAAL,CADF,eAGA,oBAAC,SAAD;AACM,IAAA,KAAK,EAAC,uBADZ;AAEM,IAAA,EAAE,EAAC,OAFT;AAGM,IAAA,SAAS,EAAElE,OAAO,CAACuF,SAHzB;AAIM,IAAA,UAAU,EAAC,qBAJjB;AAKM,IAAA,MAAM,EAAC,OALb;AAMM,IAAA,OAAO,EAAC,UANd;AAQM,IAAA,IAAI,EAAC,OARX;AASM,IAAA,QAAQ,EAAE3C,iBAThB;AAWM,IAAA,UAAU,EAAE;AAAEgD,MAAAA,SAAS,EAAE;AAAb,KAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAgBO,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,OAAO,EAAE;AAAA,aAAI3C,MAAM,EAAV;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBP,EAyBMkB,MAzBN,eA6BA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA7BA,CAFF,CADF,CADF,CAHF,CADF;AAmDD,CAloBD;;AAmoBA,eAAepE,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import React, { useState } from 'react'\nimport React, { useState, useEffect } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\n//import CardBody from \"../../components/Card/CardBody.js\";\nimport CardFooter from \"../../components/Card/CardFooter.js\";\nimport  { useDispatch,useSelector } from 'react-redux'\nimport { addClientesql } from '../../actions/clienteActions'\nimport { fetch_sunatsql } from '../../actions/sunatActions'\nimport { fetch_dnisql } from '../../actions/dniActions'\n//import { useForm } from 'react-hook-form'\nimport TextField from '@material-ui/core/TextField';\n//import InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from \"axios\";\nimport Spinner from \"../../components/common/Spinner\";\n\n\n//iimport TextField from '@material-ui/core/TextField';mport { Link } from 'react-router-dom';\n\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nconst Cliente = () => {\n//  let unidad=\"https://adryan2.sytes.net:7001\";\n  const classes = useStyles();\n\n     const dispatch = useDispatch()\n     const tip = useSelector (store => store.clientefile.clientefiles)   \n     const sunat = useSelector (store => store.sunatfile.sunatfiles)  \n     const sunatloading = useSelector (store => store.sunatfile.loading)  \n\n     const dnitodo = useSelector (store => store.dnifile.dnifiles)  \n     const dniloading = useSelector (store => store.dnifile.loading)  \n     \n     const [selector, setSelector] = useState(0); \n\n\n     const [buscador, setBuscador] = useState(0); \n\n     const [loading, setLoading] = useState(false); \n     const [mostrar, setMostrar] = useState(false); \n\n     const [descripcion, setdescripcion] = useState(\"\"); \n     //const inputRef = useRef(null);  \n     //const [Entradas, setEntradas] = useState([])\n     const [count, setCount] = useState(0);\n     //const {register, errors, handleSubmit} = useForm();\n    // const inputRef = useRef();\n\n \n     \n     const nlen=tip.length;\n      let ndata=0;\n\n\n      if (nlen>0){      \n        ndata=parseInt(tip[0].codigo)+1      \n        \n\n      }\n    \n\n\n      const [datos,setDatos]=useState({\n        codigo:ndata,\n        descripcion:'',\n        titular:'',\n        direccion:'',\n        direccion2:'',\n        direccion3:'',\n        tipo:'C',\n        tipodoc:'1',\n        ndoc:'',\n        ndoc1:'',\n        telefono:'',\n        email:'',\n        fecha:'',\n \n      })\n\n      useEffect(() => {\n        //   inputRef.current.focus();\n        setCount(ndata)\n     //   dispatch(fetch_sunatsql(buscador))\n       // dispatch(getCurrentUmedidasql())\n        //setDatos({codigo:ndata})\n         },[ndata])\n       \n\n  \n  \n  \n    const   handleInputChange=(event)=>{\n      // console.log('data')\n       setDatos({\n         ...datos,\n         [event.target.name]:event.target.value\n       })\n\n     }\n\n     const buscar =  () =>{\n       console.log(datos.ndoc1)\n       let dndoc=datos.ndoc1\n        \n        if (dndoc.length==11){\n          dispatch(fetch_sunatsql(datos.ndoc1))\n          setSelector(1)\n          setLoading(true)\n          \n        } \n        else if (dndoc.length==8){\n          dispatch(fetch_dnisql(datos.ndoc1))\n          setSelector(3)\n          setLoading(true)\n          \n\n        }\n        else{\n          alert(\"Debe Digitar un Dni o Un Ruc\")\n          setDatos({\n            codigo:ndata,\n            descripcion:'',\n            titular:'',\n            direccion:'',\n            direccion2:'',\n            direccion3:'',\n            tipo:'C',\n            tipodoc:'1',\n            ndoc:'',\n            ndoc1:'',\n            telefono:'',\n            email:'',\n            fecha:'',\n          })\n          return\n        }  \n          \n     }\n\n     const enviarDatos=(event) =>{\n            event.preventDefault(); \n            \n            console.log(datos)\n            console.log(count)\n            let data2={codigo:count}\n            console.log(data2)\n            \n      \n            Object.assign(datos,data2);\n            console.log(datos);\n\n            console.log(tip)\n          \n      /*\n            let filteredContacts = tip.filter(\n              (task) =>{\n                let poetName = task.PVCL_NroDocIdentidad;\n                return  poetName.find===datos.ndoc;    \n\n                //return poetName.indexOf(poetName) !== -1 ; \n              })\n            console.log(filteredContacts) \n          */  \n            \n            let filteredContacts = tip.filter(numero => numero.PVCL_NroDocIdentidad ===datos.ndoc );\n            \n\n/*\n\n            let  filteredContacts = tip.find( numero => numero.PVCL_NroDocIdentidad === datos.ndoc)\n            alert(JSON.stringify(filteredContacts))\n            alert(JSON.stringify(filteredContacts.length))\n            console.log(filteredContacts)  \n\n            */\n\n            if (filteredContacts.length>0){\n              alert(\"El CLiente / Proveedor Ya  se encuentra Registrado \")\n\n            }\n            else{\n               if (datos.tipodoc=='2'){\n                      if (datos.ndoc.length==11){\n                        dispatch(addClientesql(datos))\n                      }\n                      else{\n                        alert(\"El ruc debe tener 11 Numeros\")\n                      }\n                 }      \n               else{\n                    dispatch(addClientesql(datos))\n\n               }  \n              //dispatch(getCurrentClientesql())   \n               \n              }\n\t    // alert(\"Procedemos a Actualizar los Datos\");\n            \n\n           // let poetName=tip.PVCL_NroDocIdentidad\n           // let busca = poetName.indexOf(poetName) !== -1 ; \n           // console.log(busca)\n          \n            \n\n\n           \n\n\n\n\n\n\n            event.target.reset();\n\n            setDatos({\n              codigo:ndata,\n              descripcion:'',\n              titular:'',\n              direccion:'',\n              direccion2:'',\n              direccion3:'',\n              tipo:'C',\n              tipodoc:'1',\n              ndoc:'',\n              telefono:'',\n              email:'',\n              fecha:'',\n              ndoc1:'',\n            })\n         //podriamos llamar a la funcion de actualizar clientes \n\n     }\n     \n     const tiposc = [\n      {\n        value: 'C',\n        label: 'Clientes',\n      },\n      {\n        value: 'P',\n        label: 'Proveedores',\n      },\n   \n    ];\n    const tipodoc = [\n      {\n        value: '1',\n        label: 'DNI',\n      },\n      {\n        value: '2',\n        label: 'RUC',\n      },\n      {\n        value: '3',\n        label: 'OTROS',\n      },\n   \n   \n    ];\n\nlet dashbo= \"\"\nlet mostra=\"\"\n\nif (loading){\n        if (sunatloading){\n          dashbo=(\n            <Spinner />\n          )        \n        }\n        else if(dniloading){\n            dashbo=(\n              <Spinner />\n            )        \n        }\n        else{\n          //setdescripcion()\n         if (selector==1){\n\n\t\tconsole.log(sunat);\n\t\tlet arraysunat=  Object.entries(sunat);\n\t\tconsole.log(arraysunat) \n\t\tconsole.log(Object.keys(sunat).length);\n\t\tconsole.log(sunat.c0); \n                console.log(\"longitud de la cadena \");\n                if (Object.keys(sunat).length>0){\n                    console.log(sunat)\n\n                  //  console.log(sunat[0].c2)\n                    \n                   // setdescripcion(sunat[0].c2)\n\t           let dire = sunat.c6;\t\t \n\t\t   if (sunat.c5!='-'){\n                      dire=  sunat.c5+\" \"+dire;    \n\t\t     }\t\n\t\t   if (sunat.c9!='-'){\n\t\t\t  if (sunat.c9!='S/N'){ \n                              dire=  dire+\" Nro. \"+sunat.c9;\n\t\t\t  }\n\t\t\t   else{\n                              dire=dire+ \" \"+sunat.c9;      \n\t\t\t   }\n\t\t     }\t\n\t\t   if (sunat.c10!='-'){\n                      dire=  dire+\"Int. \"+sunat.c10;    \n\t\t     }\t\n\t\t   if (sunat.c11!='-'){\n                      dire=  dire+\" LOTE \"+sunat.c11;    \n\t\t     }\t\n\t\t   if (sunat.c12!='-'){\n                      dire=  dire+\" DPTO. \"+sunat.c12;    \n\t\t     }\t\n\t\t   if (sunat.c13!='-'){\n                      dire=  dire+\" Mzna. \"+sunat.c13;    \n\t\t     }\t\n\t\t   if (sunat.c14!='-'){\n                      dire=  dire+\" KM. \"+sunat.c14;    \n\t\t     }\t\n\n\n                    setdescripcion(sunat.c1)\n\t           // if (sunat.c5)\t\t\n\n                    setDatos({\n                      codigo:ndata,\n                     // descripcion:sunat[0].c2,\n                      descripcion:sunat.c1,\n                     // titular:sunat[0].c2,\n                      titular:sunat.c1,\n                     // direccion:sunat[0].c6+\" \"+sunat[0].c7+\" \"+sunat[0].c10+ \" \"+sunat[0].departamento+\" \"+sunat[0].nombre,\n                      direccion:dire,\n                      direccion2:dire,\n                      direccion3:dire,\n                     // direccion2:\n\t              //  sunat[0].c6+\" \"+sunat[0].c7+\" \"+sunat[0].c10+ \" \"+sunat[0].departamento+\" \"+sunat[0].nombre,\n                     // direccion3:\n\t\t      //   sunat[0].c6+\" \"+sunat[0].c7+\" \"+sunat[0].c10+ \" \"+sunat[0].departamento+\" \"+sunat[0].nombre,\n                      tipo:'C',\n                      tipodoc:'2',\n                      ndoc:sunat.c0,\n                    \n                      telefono:'111111',\n                      email:'grupo90pr@gmail.com',\n                      fecha:'',\n              \n                    })\n                  } \n\n         }  \n\n          \n            //alert(dnitodo.nombres);\n            //alert\n         if  (selector == 3){\n                if (dnitodo.nombres!=undefined){\n                  //console.log(dnitodo)\n                  //console.log(dnitodo.nombres)\n                  \n                  //setdescripcion(sunat[0].c2)\n              \n                  setDatos({\n                    codigo:ndata,\n                    descripcion:dnitodo.apellidoPaterno+\" \"+dnitodo.apellidoMaterno+\" \"+dnitodo.nombres,\n                    titular:dnitodo.apellidoPaterno+\" \"+dnitodo.apellidoMaterno+\" \"+dnitodo.nombres,\n                    direccion:'',\n                    direccion2:'',\n                    direccion3:'',\n                    tipo:'C',\n                    tipodoc:'1',\n                    ndoc:dnitodo.dni,               \n                    telefono:'111111',\n                    email:'grupo90pr@gmail.com',\n                    fecha:'',\n            \n                  })\n\n                  \n                } \n         }   \n\n           \n\n\n         \n          setLoading(false)\n         // setMostrar(false)\n       \n          \n\n\n        }\n\n}\n\n\n  mostra=(\n        <div>\n  \n           <TextField\n                  label=\"Codigo\"\n                  id=\"codigo\"\n                  value={ndata}                                    \n                  className={classes.textField}\n                  helperText=\"Codigo del Cliente o Proveedor\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  name=\"codigo\"                  \n                  required\n                  \n                \n                  \n                  onChange={handleInputChange}\n                  onFocus={() => setCount(ndata)}\n                                   \n                  \n                  \n                  />\n                \n              <TextField\n                id=\"descripcion\"\n                label=\"Razón Social\"\n                required\n                value={datos.descripcion}\n                name=\"descripcion\"\n                onChange={handleInputChange}\n                style={{ margin: 8,width:\"95%\"}}\n                placeholder=\"Razon Social\"\n                helperText=\"Nombre de la Empresa\"\n                fullWidth\n                margin=\"dense\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"titular\"\n                label=\"Titular\"\n                name=\"titular\"\n                value={datos.titular}\n                required\n                onChange={handleInputChange}\n                style={{ margin: 8,width:\"95%\"}}\n                placeholder=\"Titular\"\n                helperText=\"Nombre\"\n                fullWidth\n                margin=\"dense\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n             \n                 <TextField\n                id=\"direccion\"\n                label=\"Direccion\"\n                name=\"direccion\"\n                value={datos.direccion}\n                onChange={handleInputChange}\n                style={{ margin: 8,width:\"95%\"}}\n                placeholder=\"Direccion Principal\"\n                helperText=\"direccion\"\n                fullWidth\n                margin=\"dense\"\n                required\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n               <TextField\n                id=\"direccion2\"\n                label=\"Direccion2\"\n                name=\"direccion2\"\n                value={datos.direccion2}\n                onChange={handleInputChange}\n                style={{ margin: 8,width:\"95%\"}}\n                placeholder=\"Direccion2\"\n                helperText=\"Direccion 2\"\n                required\n                fullWidth\n                margin=\"dense\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n               <TextField\n                id=\"direccion3\"\n                label=\"Direccion\"\n                name=\"direccion3\"\n                value={datos.direccion3}\n                onChange={handleInputChange}\n                style={{ margin: 8,width:\"95%\"}}\n                placeholder=\"Direccion 3\"\n                helperText=\"Direccion 3\"\n                fullWidth\n                required\n                margin=\"dense\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n              />\n\n              <TextField\n                  id=\"tipo\"\n                  select\n                  label=\"Select\"\n                  value={datos.tipo}\n                  name=\"tipo\"\n                  onChange={handleInputChange}\n                  helperText=\"Seleccione un tipo de Cliente\"\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                >\n                  {tiposc.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"tipodoc\"\n                  select\n                  label=\"Select\"\n                  value={datos.tipodoc}\n                  name=\"tipodoc\"\n                  onChange={handleInputChange}\n                  helperText=\"Seleccione un tipo de Documentgo\"\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                >\n                  {tipodoc.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                label=\"N.Documento Identidad\"\n                id=\"ndoc\"       \n                value={datos.ndoc}           \n                className={classes.textField}\n                helperText=\"Numero de Documento\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                required\n                name=\"ndoc\"\n                onChange={handleInputChange}\n                />     \n\n             \n\n                 \n                 <TextField\n                  label=\"Telefono\"\n                  id=\"telefono\"  \n                  value={datos.telefono}             \n                  className={classes.textField}\n                  helperText=\"Numero de Telefono\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  name=\"telefono\"\n                  required\n                  onChange={handleInputChange}\n                />     \n                <TextField\n                  label=\"Email\"\n                  type=\"email\"\n                  id=\"email\"                  \n                  className={classes.textField}\n                  value={datos.email}\n                  helperText=\"Email\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  name=\"email\"\n                  required\n                  onChange={handleInputChange}\n                />   \n                 <TextField\n                \n                  type=\"date\"\n                  id=\"fecha\"      \n                  value={datos.fecha}            \n                  className={classes.textField}\n                  helperText=\"Fecha\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  name=\"fecha\"\n                  required\n                  onChange={handleInputChange}\n                />  \n           </div>\n         \n  \n  )\n\n\n\n\n\n\n\n\n\n\n\n    \n  \n  return (\n    <div>\n    \n    \n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n           \n            <form onSubmit={enviarDatos}>              \n              <h5>{dashbo}</h5>\n\n            <TextField\n                  label=\"N.Documento Identidad\"\n                  id=\"ndoc1\"                  \n                  className={classes.textField}\n                  helperText=\"Numero de Documento\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                 \n                  name=\"ndoc1\"\n                  onChange={handleInputChange}\n                    \n                  inputProps={{ autoFocus: true }}\n                />     \n                   <Button \n                       color=\"info\" \n                       type=\"button\"\n                       onClick={()=>buscar()}  \n                       >\n                       Buscar\n                   </Button>\n\n\n                 {mostra}  \n\n\n           \n            <CardFooter>\n              <Button color=\"info\" type=\"submit\" >Grabar</Button>\n            </CardFooter>\n           </form> \n          </Card>\n\n           \n\n\n        </GridItem>\n     \n      </GridContainer>\n    </div>\n  );\n}\nexport default Cliente\n\n/*\n console.log(sunat)\n\n\n       if (sunat.length>0){\n        setDatos1({          \n          codigo:ndata,\n          descripcion:sunat.c2,\n          titular:sunat.c2,\n          direccion:sunat.c6+\" \"+sunat.c7+\" \"+sunat.c10+\" \"+sunat.departamento+\" \"+sunat.nombre,\n          direccion2:sunat.c6+\" \"+sunat.c7+\" \"+sunat.c10+\" \"+sunat.departamento+\" \"+sunat.nombre,\n          direccion3:sunat.c6+\" \"+sunat.c7+\" \"+sunat.c10+\" \"+sunat.departamento+\" \"+sunat.nombre,\n          tipo:'C',\n          tipodoc:'2',\n          ndoc:sunat.c1,\n          telefono:'',\n          email:'',\n          fecha:'',\n        })\n\n\n       }\n       else{\n\n       }\n\n*/\n"]},"metadata":{},"sourceType":"module"}