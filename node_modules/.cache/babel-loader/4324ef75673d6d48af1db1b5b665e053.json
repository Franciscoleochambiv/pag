{"ast":null,"code":"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from '../utils/setAuthToken';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types'; //let unidad=\"https://localhost\";\n//let unidad=\"https://adryan2.sytes.net:5000\";////\n//let unidad=\"https://apisfsystem.herokuapp.com\";\n\nimport { unidad } from \"../variables\"; // Register User\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post(unidad + '/api/users/register', userData).then(function (res) {\n      return history.push('/login');\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login - Get User Token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post(unidad + '/api/users/login', userData).then(function (res) {\n      // Save to localStorage\n      var token = res.data.token; // Set token to local storage\n\n      localStorage.setItem('jwtToken', token); // Set token to Auth header\n\n      setAuthToken(token); // Decode token to get user data\n\n      var decoded = jwt_decode(token); // Set current user\n\n      dispatch(setCurrentUser(decoded));\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    // alert(\"estamos en l funcion de salida\")\n    // Remove token from localStorage\n    localStorage.removeItem('jwtToken'); // Remove auth header for future requests\n\n    setAuthToken(false); // Set current user to {} which will set isAuthenticated to false\n\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/home/lolo/Descargas/paginaflolo/paginaf4/src/actions/authActions.js"],"names":["axios","jwt_decode","setAuthToken","GET_ERRORS","SET_CURRENT_USER","unidad","registerUser","userData","history","dispatch","post","then","res","push","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C,C,CAEA;AACA;AAIA;;AAEA,SAASC,MAAT,QAAuB,cAAvB,C,CAIA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC7DT,IAAAA,KAAK,CACFU,IADH,CACQL,MAAM,GAAC,qBADf,EACsCE,QADtC,EAEGI,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ;AAAA,KAFX,WAGS,UAAAC,GAAG;AAAA,aACRL,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEZ,UADC;AAEPa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CADA;AAAA,KAHZ;AASD,GAV2B;AAAA,CAArB,C,CAYP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAZ,QAAQ;AAAA,SAAI,UAAAE,QAAQ,EAAI;AAC/CT,IAAAA,KAAK,CAACU,IAAN,CAAWL,MAAM,GAAC,kBAAlB,EAAsCE,QAAtC,EACGI,IADH,CACQ,UAAAC,GAAG,EAAI;AACX;AACA,UAAQQ,KAAR,GAAkBR,GAAG,CAACM,IAAtB,CAAQE,KAAR,CAFW,CAGX;;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAJW,CAKX;;AACAlB,MAAAA,YAAY,CAACkB,KAAD,CAAZ,CANW,CAOX;;AACA,UAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAD,CAA1B,CARW,CASX;;AACAX,MAAAA,QAAQ,CAACe,cAAc,CAACD,OAAD,CAAf,CAAR;AACD,KAZH,WAaS,UAAAT,GAAG;AAAA,aACRL,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEZ,UADC;AAEPa,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CADA;AAAA,KAbZ;AAkBD,GAnBgC;AAAA,CAA1B,C,CAqBP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAa;AACzC,SAAO;AACLR,IAAAA,IAAI,EAAEX,gBADD;AAELY,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAhB,QAAQ,EAAI;AAE3C;AACC;AACAY,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB,EAJ0C,CAO1C;;AACAxB,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAR0C,CAS1C;;AACAO,IAAAA,QAAQ,CAACe,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAXyB;AAAA,CAAnB","sourcesContent":["import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from '../utils/setAuthToken';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n//let unidad=\"https://localhost\";\n//let unidad=\"https://adryan2.sytes.net:5000\";////\n\n\n\n//let unidad=\"https://apisfsystem.herokuapp.com\";\n\nimport { unidad } from \"../variables\";\n\n\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(unidad+'/api/users/register', userData)\n    .then(res => history.push('/login'))\n    .catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - Get User Token\nexport const loginUser = userData => dispatch => {\n  axios.post(unidad+'/api/users/login', userData)\n    .then(res => {\n      // Save to localStorage\n      const { token } = res.data;\n      // Set token to local storage\n      localStorage.setItem('jwtToken', token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n    }));\n}\n\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n\n // alert(\"estamos en l funcion de salida\")\n  // Remove token from localStorage\n  localStorage.removeItem('jwtToken');\n\n \n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n}"]},"metadata":{},"sourceType":"module"}