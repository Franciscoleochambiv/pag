{"version":3,"file":"downshift.umd.js","sources":["../src/set-a11y-status.js","../src/utils.js","../src/downshift.js","../src/index.js"],"sourcesContent":["// istanbul ignore next\nlet statusDiv =\n  typeof document === 'undefined' ?\n    null :\n    document.getElementById('a11y-status-message')\n\nlet statuses = []\n\nfunction setStatus(status) {\n  const isSameAsLast = statuses[statuses.length - 1] === status\n  if (isSameAsLast) {\n    statuses = [...statuses, status]\n  } else {\n    statuses = [status]\n  }\n  const div = getStatusDiv()\n  div.innerHTML = `${statuses.filter(Boolean).map(getStatusHtml).join('')}`\n}\n\nfunction getStatusHtml(status, index) {\n  const display = index === statuses.length - 1 ? 'block' : 'none'\n  return `<div style=\"display:${display};\">${status}</div>`\n}\n\nfunction getStatusDiv() {\n  if (statusDiv) {\n    return statusDiv\n  }\n  statusDiv = document.createElement('div')\n  statusDiv.setAttribute('id', 'a11y-status-message')\n  statusDiv.setAttribute('role', 'status')\n  statusDiv.setAttribute('aria-live', 'assertive')\n  statusDiv.setAttribute('aria-relevant', 'additions text')\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px',\n  })\n  document.body.appendChild(statusDiv)\n  return statusDiv\n}\n\nexport default setStatus\n","let idCounter = 1\n\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop\n}\nfunction noop() {}\n\nfunction findParent(finder, node, rootNode) {\n  if (node !== null && node !== rootNode.parentNode) {\n    if (finder(node)) {\n      return node\n    } else {\n      return findParent(finder, node.parentNode, rootNode)\n    }\n  } else {\n    return null\n  }\n}\n\n/**\n* Get the closest element that scrolls\n* @param {HTMLElement} node - the child element to start searching for scroll parent at\n* @param {HTMLElement} rootNode - the root element of the component\n* @return {HTMLElement} the closest parentNode that scrolls\n*/\nconst getClosestScrollParent = findParent.bind(\n  null,\n  node => node.scrollHeight > node.clientHeight,\n)\n\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node - the element that should scroll into view\n * @param {HTMLElement} rootNode - the root element of the component\n * @param {Boolean} alignToTop - align element to the top of the visible area of the scrollable ancestor\n */\nfunction scrollIntoView(node, rootNode) {\n  const scrollParent = getClosestScrollParent(node, rootNode)\n  if (scrollParent === null) {\n    return\n  }\n  const scrollParentStyles = getComputedStyle(scrollParent)\n  const scrollParentRect = scrollParent.getBoundingClientRect()\n  const scrollParentBorderTopWidth = parseInt(\n    scrollParentStyles.borderTopWidth,\n    10,\n  )\n  const scrollParentBorderBottomWidth = parseInt(\n    scrollParentStyles.borderBottomWidth,\n    10,\n  )\n  const scrollParentTop = scrollParentRect.top + scrollParentBorderTopWidth\n  const nodeRect = node.getBoundingClientRect()\n  const nodeOffsetTop = nodeRect.top + scrollParent.scrollTop\n  const nodeTop = nodeOffsetTop - scrollParentTop\n  if (nodeTop < scrollParent.scrollTop) {\n    // the item is above the scrollable area\n    scrollParent.scrollTop = nodeTop\n  } else if (\n    nodeTop +\n      nodeRect.height +\n      scrollParentBorderTopWidth +\n      scrollParentBorderBottomWidth >\n    scrollParent.scrollTop + scrollParentRect.height\n  ) {\n    // the item is below the scrollable area\n    scrollParent.scrollTop =\n      nodeTop +\n      nodeRect.height -\n      scrollParentRect.height +\n      scrollParentBorderTopWidth +\n      scrollParentBorderBottomWidth\n  }\n  // the item is within the scrollable area (do nothing)\n}\n\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\nfunction debounce(fn, time) {\n  let timeoutId\n  return wrapper\n  function wrapper(...args) {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      fn(...args)\n    }, time)\n  }\n}\n\n/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls\n * `event.preventDefault()`. Not sure this is the best\n * way to do this, but it seems legit...\n * @param {Function} fns the event hanlder functions\n * @return {Function} the event handler to add to an element\n */\nfunction composeEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some(fn => {\n      fn && fn(event, ...args)\n      return event.defaultPrevented\n    })\n}\n\n/**\n * This generates a unique ID for all autocomplete inputs\n * @param {String} prefix the prefix for the id\n * @return {String} the unique ID\n */\nfunction generateId(prefix) {\n  return `${prefix}-${idCounter++}`\n}\n\n/**\n * This is only used in tests... Could be useful in SSR?\n * @param {Number} num The number to set the idCountry to\n */\nfunction setIdCounter(num) {\n  idCounter = num\n}\n\n/**\n * Returns the first argument that is not undefined\n * @param {...*} args the arguments\n * @return {*} the defined value\n */\nfunction firstDefined(...args) {\n  return args.find(a => typeof a !== 'undefined')\n}\n\nfunction isNumber(thing) {\n  // not NaN and is a number type\n  // eslint-disable-next-line no-self-compare\n  return thing === thing && typeof thing === 'number'\n}\n\n// eslint-disable-next-line complexity\nfunction getA11yStatusMessage({\n  isOpen,\n  highlightedItem,\n  selectedItem,\n  resultCount,\n  previousResultCount,\n  itemToString,\n}) {\n  if (!isOpen) {\n    if (selectedItem) {\n      return itemToString(selectedItem)\n    } else {\n      return ''\n    }\n  }\n  const resultCountChanged = resultCount !== previousResultCount\n  if (!resultCount) {\n    return 'No results.'\n  } else if (!highlightedItem || resultCountChanged) {\n    return `${resultCount} ${resultCount === 1 ?\n      'result is' :\n      'results are'} available, use up and down arrow keys to navigate.`\n  }\n  return itemToString(highlightedItem)\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */ arg[0] : arg\n  if (!arg && defaultValue) {\n    return defaultValue\n  } else {\n    return arg\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\nfunction isDOMElement(element) {\n  /* istanbul ignore if */\n  if (element.nodeName) {\n    // then this is preact\n    return typeof element.nodeName === 'string'\n  } else {\n    // then we assume this is react\n    return typeof element.type === 'string'\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\nfunction getElementProps(element) {\n  // props for react, attributes for preact\n  return element.props || /* istanbul ignore next (preact) */ element.attributes\n}\n\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\nfunction requiredProp(fnName, propName) {\n  throw new Error(`The property \"${propName}\" is required in \"${fnName}\"`)\n}\n\nexport {\n  cbToCb,\n  findParent,\n  composeEventHandlers,\n  debounce,\n  scrollIntoView,\n  generateId,\n  firstDefined,\n  isNumber,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  noop,\n  requiredProp,\n  setIdCounter,\n}\n","/* eslint camelcase:0 */\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport setA11yStatus from './set-a11y-status'\nimport {\n  cbToCb,\n  findParent,\n  composeEventHandlers,\n  debounce,\n  scrollIntoView,\n  generateId,\n  firstDefined,\n  isNumber,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  noop,\n  requiredProp,\n} from './utils'\n\nclass Downshift extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    defaultHighlightedIndex: PropTypes.number,\n    defaultSelectedItem: PropTypes.any,\n    defaultInputValue: PropTypes.string,\n    defaultIsOpen: PropTypes.bool,\n    getA11yStatusMessage: PropTypes.func,\n    itemToString: PropTypes.func,\n    onChange: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onUserAction: PropTypes.func,\n    onClick: PropTypes.func,\n    itemCount: PropTypes.number,\n    // things we keep in state for uncontrolled components\n    // but can accept as props for controlled components\n    /* eslint-disable react/no-unused-prop-types */\n    selectedItem: PropTypes.any,\n    isOpen: PropTypes.bool,\n    inputValue: PropTypes.string,\n    highlightedIndex: PropTypes.number,\n    /* eslint-enable */\n  }\n\n  static defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultSelectedItem: null,\n    defaultInputValue: '',\n    defaultIsOpen: false,\n    getA11yStatusMessage,\n    itemToString: i => (i == null ? '' : String(i)),\n    onStateChange: () => {},\n    onUserAction: () => {},\n    onChange: () => {},\n  }\n\n  // this is an experimental feature\n  // so we're not going to document this yet\n  // nor are we going to test it.\n  // We will try to avoid breaking it, but\n  // we make no guarantees.\n  // If you need it, we recommend that you lock\n  // down your version of downshift (don't use a\n  // version range) to avoid surprise breakages.\n  static stateChangeTypes = {\n    unknown: '__autocomplete_unknown__',\n    mouseUp: '__autocomplete_mouseup__',\n    itemMouseEnter: '__autocomplete_item_mouseenter__',\n    keyDownArrowUp: '__autocomplete_keydown_arrow_up__',\n    keyDownArrowDown: '__autocomplete_keydown_arrow_down__',\n    keyDownEscape: '__autocomplete_keydown_escape__',\n    keyDownEnter: '__autocomplete_keydown_enter__',\n    blurInput: '__autocomplete_blur_input__',\n    changeInput: '__autocomplete_change_input__',\n    keyDownSpaceButton: '__autocomplete_keydown_space_button__',\n    clickButton: '__autocomplete_click_button__',\n    controlledPropUpdatedSelectedItem:\n      '__autocomplete_controlled_prop_updated_selected_item__',\n  }\n\n  constructor(...args) {\n    super(...args)\n    const state = this.getState({\n      highlightedIndex: this.props.defaultHighlightedIndex,\n      isOpen: this.props.defaultIsOpen,\n      inputValue: this.props.defaultInputValue,\n      selectedItem: this.props.defaultSelectedItem,\n    })\n    if (state.selectedItem) {\n      state.inputValue = this.props.itemToString(state.selectedItem)\n    }\n    this.state = state\n  }\n\n  id = generateId('downshift')\n  root_handleClick = composeEventHandlers(\n    this.props.onClick,\n    this.root_handleClick,\n  )\n  input = null\n  items = []\n  previousResultCount = 0\n\n  /**\n   * Gets the state based on internal state or props\n   * If a state value is passed via props, then that\n   * is the value given, otherwise it's retrieved from\n   * stateToMerge\n   *\n   * This will perform a shallow merge of the given state object\n   * with the state coming from props\n   * (for the controlled component scenario)\n   * This is used in state updater functions so they're referencing\n   * the right state regardless of where it comes from.\n   *\n   * @param {Object} stateToMerge defaults to this.state\n   * @return {Object} the state\n   */\n  getState(stateToMerge = this.state) {\n    return Object.keys(stateToMerge).reduce((state, key) => {\n      state[key] = this.isControlledProp(key) ?\n        this.props[key] :\n        stateToMerge[key]\n      return state\n    }, {})\n  }\n\n  /**\n   * This determines whether a prop is a \"controlled prop\" meaning it is\n   * state which is controlled by the outside of this component rather\n   * than within this component.\n   * @param {String} key the key to check\n   * @return {Boolean} whether it is a controlled controlled prop\n   */\n  isControlledProp(key) {\n    return this.props[key] !== undefined\n  }\n\n  getItemCount() {\n    if (this.props.itemCount === undefined) {\n      return this.items.length\n    } else {\n      return this.props.itemCount\n    }\n  }\n\n  getItemNodeFromIndex = index => {\n    return document.getElementById(this.getItemId(index))\n  }\n\n  setHighlightedIndex = (\n    highlightedIndex = this.props.defaultHighlightedIndex,\n    otherStateToSet = {},\n  ) => {\n    this.internalSetState({highlightedIndex, ...otherStateToSet}, () => {\n      const node = this.getItemNodeFromIndex(this.getState().highlightedIndex)\n      const rootNode = this._rootNode\n      scrollIntoView(node, rootNode)\n    })\n  }\n\n  openAndHighlightDefaultIndex = (otherStateToSet = {}) => {\n    this.setHighlightedIndex(undefined, {isOpen: true, ...otherStateToSet})\n  }\n\n  highlightDefaultIndex = (otherStateToSet = {}) => {\n    this.setHighlightedIndex(undefined, otherStateToSet)\n  }\n\n  moveHighlightedIndex = (amount, otherStateToSet) => {\n    if (this.getState().isOpen) {\n      this.changeHighlightedIndex(amount, otherStateToSet)\n    } else {\n      this.openAndHighlightDefaultIndex(otherStateToSet)\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  changeHighlightedIndex = (moveAmount, otherStateToSet) => {\n    const itemsLastIndex = this.getItemCount() - 1\n    if (itemsLastIndex < 0) {\n      return\n    }\n    const {highlightedIndex} = this.getState()\n    let baseIndex = highlightedIndex\n    if (baseIndex === null) {\n      baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1\n    }\n    let newIndex = baseIndex + moveAmount\n    if (newIndex < 0) {\n      newIndex = itemsLastIndex\n    } else if (newIndex > itemsLastIndex) {\n      newIndex = 0\n    }\n    this.setHighlightedIndex(newIndex, otherStateToSet)\n  }\n\n  clearSelection = cb => {\n    this.internalSetState(\n      {\n        selectedItem: null,\n        inputValue: '',\n        isOpen: false,\n      },\n      () => {\n        const inputNode = this._rootNode.querySelector(`#${this.inputId}`)\n        inputNode && inputNode.focus && inputNode.focus()\n        cbToCb(cb)()\n      },\n    )\n  }\n\n  selectItem = (item, otherStateToSet, cb) => {\n    this.internalSetState(\n      {\n        isOpen: false,\n        highlightedIndex: null,\n        selectedItem: item,\n        inputValue: this.props.itemToString(item),\n        ...otherStateToSet,\n      },\n      cbToCb(cb),\n    )\n  }\n\n  selectItemAtIndex = (itemIndex, otherStateToSet, cb) => {\n    const item = this.items[itemIndex]\n    if (!item) {\n      return\n    }\n    this.selectItem(item, otherStateToSet, cb)\n  }\n\n  selectHighlightedItem = (otherStateToSet, cb) => {\n    return this.selectItemAtIndex(\n      this.getState().highlightedIndex,\n      otherStateToSet,\n      cb,\n    )\n  }\n\n  // any piece of our state can live in two places:\n  // 1. Uncontrolled: it's internal (this.state)\n  //    We will call this.setState to update that state\n  // 2. Controlled: it's external (this.props)\n  //    We will call this.props.onStateChange to update that state\n  //\n  // In addition, we'll call this.props.onChange if the\n  // selectedItem is changed.\n  internalSetState(stateToSet, cb) {\n    let onChangeArg\n    const onStateChangeArg = {}\n    return this.setState(\n      state => {\n        state = this.getState(state)\n        stateToSet =\n          typeof stateToSet === 'function' ? stateToSet(state) : stateToSet\n        // this keeps track of the object we want to call with setState\n        const nextState = {}\n        // this is just used to tell whether the state changed\n        const nextFullState = {}\n        // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n        if (\n          stateToSet.hasOwnProperty('selectedItem') &&\n          stateToSet.selectedItem !== state.selectedItem\n        ) {\n          onChangeArg = stateToSet.selectedItem\n        }\n        stateToSet.type = stateToSet.type || Downshift.stateChangeTypes.unknown\n        Object.keys(stateToSet).forEach(key => {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== stateToSet[key]) {\n            onStateChangeArg[key] = stateToSet[key]\n          }\n          // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n          if (key === 'type') {\n            return\n          }\n          nextFullState[key] = stateToSet[key]\n          // if it's coming from props, then we don't care to set it internally\n          if (!this.isControlledProp(key)) {\n            nextState[key] = stateToSet[key]\n          }\n        })\n        return nextState\n      },\n      () => {\n        // call the provided callback if it's a callback\n        cbToCb(cb)()\n\n        // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n        const hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1\n        if (hasMoreStateThanType) {\n          this.props.onStateChange(onStateChangeArg, this.getStateAndHelpers())\n        }\n        if (onChangeArg !== undefined) {\n          this.props.onChange(onChangeArg, this.getStateAndHelpers())\n        }\n        // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n        this.props.onUserAction(onStateChangeArg, this.getStateAndHelpers())\n      },\n    )\n  }\n\n  getStateAndHelpers() {\n    const {highlightedIndex, inputValue, selectedItem, isOpen} = this.getState()\n    const {itemToString} = this.props\n    const {\n      getRootProps,\n      getButtonProps,\n      getLabelProps,\n      getInputProps,\n      getItemProps,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      reset,\n    } = this\n    return {\n      // prop getters\n      getRootProps,\n      getButtonProps,\n      getLabelProps,\n      getInputProps,\n      getItemProps,\n\n      // actions\n      reset,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      itemToString,\n\n      // state\n      highlightedIndex,\n      inputValue,\n      isOpen,\n      selectedItem,\n    }\n  }\n\n  //////////////////////////// ROOT\n\n  rootRef = node => (this._rootNode = node)\n\n  getRootProps = ({refKey = 'ref', onClick, ...rest} = {}) => {\n    // this is used in the render to know whether the user has called getRootProps.\n    // It uses that to know whether to apply the props automatically\n    this.getRootProps.called = true\n    this.getRootProps.refKey = refKey\n    return {\n      [refKey]: this.rootRef,\n      onClick: composeEventHandlers(onClick, this.root_handleClick),\n      ...rest,\n    }\n  }\n\n  root_handleClick = event => {\n    event.preventDefault()\n    const itemParent = findParent(\n      node => {\n        const index = this.getItemIndexFromId(node.getAttribute('id'))\n        return isNumber(index)\n      },\n      event.target,\n      this._rootNode,\n    )\n    if (itemParent) {\n      this.selectItemAtIndex(\n        this.getItemIndexFromId(itemParent.getAttribute('id')),\n      )\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ROOT\n\n  keyDownHandlers = {\n    ArrowDown(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? 5 : 1\n      this.moveHighlightedIndex(amount, {\n        type: Downshift.stateChangeTypes.keyDownArrowDown,\n      })\n    },\n\n    ArrowUp(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? -5 : -1\n      this.moveHighlightedIndex(amount, {\n        type: Downshift.stateChangeTypes.keyDownArrowUp,\n      })\n    },\n\n    Enter(event) {\n      if (this.getState().isOpen) {\n        event.preventDefault()\n        this.selectHighlightedItem({\n          type: Downshift.stateChangeTypes.keyDownEnter,\n        })\n      }\n    },\n\n    Escape(event) {\n      event.preventDefault()\n      this.reset({type: Downshift.stateChangeTypes.keyDownEscape})\n    },\n  }\n\n  //////////////////////////// BUTTON\n\n  buttonKeyDownHandlers = {\n    ...this.keyDownHandlers,\n\n    ' '(event) {\n      event.preventDefault()\n      this.toggleMenu({type: Downshift.stateChangeTypes.keyDownSpaceButton})\n    },\n  }\n\n  getButtonProps = ({onClick, onKeyDown, ...rest} = {}) => {\n    const {isOpen} = this.getState()\n    return {\n      role: 'button',\n      'aria-label': isOpen ? 'close menu' : 'open menu',\n      'aria-expanded': isOpen,\n      'aria-haspopup': true,\n      onClick: composeEventHandlers(onClick, this.button_handleClick),\n      onKeyDown: composeEventHandlers(onKeyDown, this.button_handleKeyDown),\n      ...rest,\n    }\n  }\n\n  button_handleKeyDown = event => {\n    if (this.buttonKeyDownHandlers[event.key]) {\n      this.buttonKeyDownHandlers[event.key].call(this, event)\n    }\n  }\n\n  button_handleClick = event => {\n    event.preventDefault()\n    this.toggleMenu({type: Downshift.stateChangeTypes.clickButton})\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ BUTTON\n\n  /////////////////////////////// LABEL\n\n  getLabelProps = (props = {}) => {\n    this.getLabelProps.called = true\n    if (\n      this.getInputProps.called &&\n      props.htmlFor &&\n      props.htmlFor !== this.inputId\n    ) {\n      throw new Error(\n        `downshift: You provided the htmlFor of \"${props.htmlFor}\" for your label, but the id of your input is \"${this\n          .inputId}\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.`,\n      )\n    }\n    this.inputId = firstDefined(\n      this.inputId,\n      props.htmlFor,\n      generateId('downshift-input'),\n    )\n    return {\n      ...props,\n      htmlFor: this.inputId,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ LABEL\n\n  /////////////////////////////// INPUT\n\n  getInputProps = ({onKeyDown, onBlur, onChange, onInput, ...rest} = {}) => {\n    this.getInputProps.called = true\n    if (this.getLabelProps.called && rest.id && rest.id !== this.inputId) {\n      throw new Error(\n        `downshift: You provided the id of \"${rest.id}\" for your input, but the htmlFor of your label is \"${this\n          .inputId}\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.`,\n      )\n    }\n    this.inputId = firstDefined(\n      this.inputId,\n      rest.id,\n      generateId('downshift-input'),\n    )\n    const onChangeKey =\n      process.env.LIBRARY === 'preact' ? /* istanbul ignore next (preact) */\n      'onInput' :\n        'onChange'\n    const {inputValue, isOpen, highlightedIndex} = this.getState()\n    return {\n      role: 'combobox',\n      'aria-autocomplete': 'list',\n      'aria-expanded': isOpen,\n      'aria-activedescendant':\n        typeof highlightedIndex === 'number' && highlightedIndex >= 0 ?\n          this.getItemId(highlightedIndex) :\n          null,\n      autoComplete: 'off',\n      value: inputValue,\n      // preact compatibility\n      [onChangeKey]: composeEventHandlers(\n        onChange,\n        onInput,\n        this.input_handleChange,\n      ),\n      onKeyDown: composeEventHandlers(onKeyDown, this.input_handleKeyDown),\n      onBlur: composeEventHandlers(onBlur, this.input_handleBlur),\n      ...rest,\n      id: this.inputId,\n    }\n  }\n\n  input_handleKeyDown = event => {\n    if (event.key && this.keyDownHandlers[event.key]) {\n      this.keyDownHandlers[event.key].call(this, event)\n    }\n  }\n\n  input_handleChange = event => {\n    this.internalSetState({\n      type: Downshift.stateChangeTypes.changeInput,\n      isOpen: true,\n      inputValue: event.target.value,\n    })\n  }\n\n  input_handleBlur = () => {\n    if (!this.isMouseDown) {\n      this.reset({type: Downshift.stateChangeTypes.blurInput})\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ INPUT\n\n  /////////////////////////////// ITEM\n  getItemId(index) {\n    return `${this.id}-item-${index}`\n  }\n\n  getItemIndexFromId(id) {\n    if (id) {\n      return Number(id.split(`${this.id}-item-`)[1])\n    } else {\n      return null\n    }\n  }\n\n  getItemProps = (\n    {\n      onMouseEnter,\n      index,\n      item = requiredProp('getItemProps', 'item'),\n      ...rest\n    } = {},\n  ) => {\n    if (index === undefined) {\n      this.items.push(item)\n      index = this.items.indexOf(item)\n    } else {\n      this.items[index] = item\n    }\n    return {\n      id: this.getItemId(index),\n      onMouseEnter: composeEventHandlers(onMouseEnter, () => {\n        this.setHighlightedIndex(index, {\n          type: Downshift.stateChangeTypes.itemMouseEnter,\n        })\n      }),\n      ...rest,\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ITEM\n\n  reset = (otherStateToSet = {}, cb) => {\n    this.internalSetState(\n      ({selectedItem}) => ({\n        isOpen: false,\n        highlightedIndex: null,\n        inputValue: this.props.itemToString(selectedItem),\n        ...otherStateToSet,\n      }),\n      cbToCb(cb),\n    )\n  }\n\n  toggleMenu = (otherStateToSet = {}, cb) => {\n    this.internalSetState(\n      ({isOpen}) => {\n        return {isOpen: !isOpen, ...otherStateToSet}\n      },\n      () => {\n        const {isOpen} = this.getState()\n        if (isOpen) {\n          this.highlightDefaultIndex()\n        }\n        cbToCb(cb)()\n      },\n    )\n  }\n\n  openMenu = cb => {\n    this.internalSetState({isOpen: true}, cbToCb(cb))\n  }\n\n  closeMenu = cb => {\n    this.internalSetState({isOpen: false}, cbToCb(cb))\n  }\n\n  updateStatus = debounce(() => {\n    if (!this._isMounted) {\n      return\n    }\n    const state = this.getState()\n    const item = this.items[state.highlightedIndex] || {}\n    const resultCount = this.getItemCount()\n    const status = this.props.getA11yStatusMessage({\n      itemToString: this.props.itemToString,\n      previousResultCount: this.previousResultCount,\n      resultCount,\n      highlightedItem: item,\n      ...state,\n    })\n    this.previousResultCount = resultCount\n    setA11yStatus(status)\n  }, 200)\n\n  componentDidMount() {\n    // the _isMounted property is because we have `updateStatus` in a `debounce`\n    // and we don't want to update the status if the component has been umounted\n    this._isMounted = true\n    // this.isMouseDown helps us track whether the mouse is currently held down.\n    // This is useful when the user clicks on an item in the list, but holds the mouse\n    // down long enough for the list to disappear (because the blur event fires on the input)\n    // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n    // trigger hiding the menu.\n    const onMouseDown = () => {\n      this.isMouseDown = true\n    }\n    const onMouseUp = event => {\n      this.isMouseDown = false\n      if (\n        (event.target === this._rootNode ||\n          !this._rootNode.contains(event.target)) &&\n        this.getState().isOpen\n      ) {\n        this.reset({type: Downshift.stateChangeTypes.mouseUp})\n      }\n    }\n    window.addEventListener('mousedown', onMouseDown)\n    window.addEventListener('mouseup', onMouseUp)\n\n    this.cleanup = () => {\n      this._isMounted = false\n      window.removeEventListener('mousedown', onMouseDown)\n      window.removeEventListener('mouseup', onMouseUp)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.isControlledProp('selectedItem') &&\n      this.props.selectedItem !== prevProps.selectedItem\n    ) {\n      this.internalSetState({\n        type: Downshift.stateChangeTypes.controlledPropUpdatedSelectedItem,\n        inputValue: this.props.itemToString(this.props.selectedItem),\n      })\n    }\n    this.updateStatus()\n  }\n\n  componentWillUnmount() {\n    this.cleanup() // avoids memory leak\n  }\n\n  render() {\n    const children = unwrapArray(this.props.children, noop)\n    // because the items are rerendered every time we call the children\n    // we clear this out each render and\n    this.items = []\n    // we reset this so we know whether the user calls getRootProps during\n    // this render. If they do then we don't need to do anything,\n    // if they don't then we need to clone the element they return and\n    // apply the props for them.\n    this.getRootProps.called = false\n    this.getRootProps.refKey = undefined\n    // we do something similar for getLabelProps\n    this.getLabelProps.called = false\n    // and something similar for getInputProps\n    this.getInputProps.called = false\n    const element = unwrapArray(children(this.getStateAndHelpers()))\n    if (!element) {\n      return null\n    }\n    if (this.getRootProps.called) {\n      validateGetRootPropsCalledCorrectly(element, this.getRootProps)\n      return element\n    } else if (isDOMElement(element)) {\n      // they didn't apply the root props, but we can clone\n      // this and apply the props ourselves\n      return React.cloneElement(\n        element,\n        this.getRootProps(getElementProps(element)),\n      )\n    } else {\n      // they didn't apply the root props, but they need to\n      // otherwise we can't query around the autocomplete\n      throw new Error(\n        'downshift: If you return a non-DOM element, you must use apply the getRootProps function',\n      )\n    }\n  }\n}\n\nexport default Downshift\n\nfunction validateGetRootPropsCalledCorrectly(element, {refKey}) {\n  const refKeySpecified = refKey !== 'ref'\n  const isComposite = !isDOMElement(element)\n  if (isComposite && !refKeySpecified) {\n    throw new Error(\n      'downshift: You returned a non-DOM element. You must specify a refKey in getRootProps',\n    )\n  } else if (!isComposite && refKeySpecified) {\n    throw new Error(\n      `downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"${refKey}\"`,\n    )\n  }\n  if (!getElementProps(element).hasOwnProperty(refKey)) {\n    throw new Error(\n      `downshift: You must apply the ref prop \"${refKey}\" from getRootProps onto your root element.`,\n    )\n  }\n  if (!getElementProps(element).hasOwnProperty('onClick')) {\n    throw new Error(\n      `downshift: You must apply the \"onClick\" prop from getRootProps onto your root element.`,\n    )\n  }\n}\n","import Downshift from './downshift'\n\n/*\n * Fix importing in typescript after rollup compilation\n * https://github.com/rollup/rollup/issues/1156\n * https://github.com/Microsoft/TypeScript/issues/13017#issuecomment-268657860\n */\nDownshift.default = Downshift\n\nexport default Downshift\n"],"names":["statusDiv","document","getElementById","statuses","setStatus","status","isSameAsLast","length","div","getStatusDiv","innerHTML","filter","Boolean","map","getStatusHtml","join","index","display","createElement","setAttribute","assign","style","body","appendChild","idCounter","cbToCb","cb","noop","findParent","finder","node","rootNode","parentNode","getClosestScrollParent","bind","scrollHeight","clientHeight","scrollIntoView","scrollParent","scrollParentStyles","getComputedStyle","scrollParentRect","getBoundingClientRect","scrollParentBorderTopWidth","parseInt","borderTopWidth","scrollParentBorderBottomWidth","borderBottomWidth","scrollParentTop","top","nodeRect","nodeOffsetTop","scrollTop","nodeTop","height","debounce","fn","time","timeoutId","wrapper","args","setTimeout","composeEventHandlers","fns","event","some","defaultPrevented","generateId","prefix","firstDefined","find","a","isNumber","thing","getA11yStatusMessage","isOpen","highlightedItem","selectedItem","resultCount","previousResultCount","itemToString","resultCountChanged","unwrapArray","arg","defaultValue","Array","isArray","isDOMElement","element","nodeName","type","getElementProps","props","attributes","requiredProp","fnName","propName","Error","Downshift","state","getState","defaultHighlightedIndex","defaultIsOpen","defaultInputValue","defaultSelectedItem","inputValue","stateToMerge","Object","keys","reduce","key","isControlledProp","undefined","itemCount","items","stateToSet","onChangeArg","onStateChangeArg","setState","nextState","nextFullState","hasOwnProperty","stateChangeTypes","unknown","forEach","hasMoreStateThanType","onStateChange","getStateAndHelpers","onChange","onUserAction","highlightedIndex","getRootProps","getButtonProps","getLabelProps","getInputProps","getItemProps","openMenu","closeMenu","toggleMenu","selectItem","selectItemAtIndex","selectHighlightedItem","setHighlightedIndex","clearSelection","reset","id","Number","split","_isMounted","onMouseDown","isMouseDown","onMouseUp","target","_rootNode","contains","mouseUp","addEventListener","cleanup","removeEventListener","prevProps","internalSetState","controlledPropUpdatedSelectedItem","updateStatus","children","called","refKey","React","cloneElement","Component","propTypes","PropTypes","func","number","any","string","bool","defaultProps","i","String","root_handleClick","onClick","input","getItemNodeFromIndex","getItemId","otherStateToSet","openAndHighlightDefaultIndex","highlightDefaultIndex","moveHighlightedIndex","amount","changeHighlightedIndex","moveAmount","itemsLastIndex","getItemCount","baseIndex","newIndex","inputNode","querySelector","inputId","focus","item","itemIndex","rootRef","rest","preventDefault","itemParent","getItemIndexFromId","getAttribute","keyDownHandlers","shiftKey","keyDownArrowDown","keyDownArrowUp","keyDownEnter","keyDownEscape","buttonKeyDownHandlers","keyDownSpaceButton","onKeyDown","button_handleClick","button_handleKeyDown","call","clickButton","htmlFor","onBlur","onInput","onChangeKey","input_handleChange","input_handleKeyDown","input_handleBlur","changeInput","value","blurInput","onMouseEnter","push","indexOf","itemMouseEnter","validateGetRootPropsCalledCorrectly","refKeySpecified","isComposite","default"],"mappings":"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"}